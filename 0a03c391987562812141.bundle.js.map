{"version":3,"file":"0a03c391987562812141.bundle.js","mappings":"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","sources":["webpack://pockmas/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.html","webpack://pockmas/./src/time-format.ts","webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.ts","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.ts","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.html","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.ts","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.html","webpack://pockmas/./src/components/RouteSummary/RouteSummary.html","webpack://pockmas/./src/components/WalkingDisplay/WalkingDisplay.html","webpack://pockmas/./src/components/WalkingDisplay/WalkingDisplay.ts","webpack://pockmas/./src/components/RouteTimeline/RouteTimeline.ts","webpack://pockmas/./src/components/RouteTimeline/RouteTimeline.html","webpack://pockmas/./src/components/RouteSummary/RouteSummary.ts","webpack://pockmas/./src/components/RouteResultsList/RouteResultsList.ts","webpack://pockmas/./src/components/RouteResultsList/RouteResultsList.html","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.ts","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.html","webpack://pockmas/./src/utils/ArrayToElementRenderer.ts"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../icons/transport_stop.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<div class=\\\"departure-display__departure\\\"> <flip-time-display class=\\\"departure-display__departure-time\\\"></flip-time-display> <div> <transit-display class=\\\"departure-display__departure-line\\\"></transit-display> </div> <span class=\\\"departure-display__departure-headsign\\\"></span> <span class=\\\"departure-display__planned-time\\\"></span> <span class=\\\"departure-display__departure-stop-display\\\"> <img class=\\\"departure-display__departure-stop-img\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"Abfahrtsstation\\\">Abfahrt: <span class=\\\"departure-display__departure-stop\\\"></span> </span> </div>\";\n// Exports\nexport default code;","export const timeFormat = Intl.DateTimeFormat([], { hour: \"2-digit\", minute: \"2-digit\" });","import template from \"./DepartureDisplay.html\";\nimport \"./DepartureDisplay.scss\";\nimport \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { RouteAttribute, RouteColorAttribute, TransitDisplay } from \"../TransitDisplay/TransitDisplay\";\nimport { FlipTimeDisplay } from \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { Departure } from \"../../lib/Departure\";\nimport { timeFormat } from \"../../time-format\";\n\nexport class DepartureDisplay extends HTMLElement {\n    private rendered = false;\n    private departureTime: FlipTimeDisplay;\n    private departureLine: TransitDisplay;\n    private departureStop: HTMLSpanElement;\n    private departureHeadsign: HTMLSpanElement;\n    private plannedTime: HTMLSpanElement;\n    private abortController: AbortController;\n    private renderedDeparture: Departure;\n    private nextDeparture: Departure;\n\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureTime = this.querySelector(\".departure-display__departure-time\");\n            this.plannedTime = this.querySelector(\".departure-display__planned-time\");\n            this.departureLine = this.querySelector(\".departure-display__departure-line\");\n            this.departureStop = this.querySelector(\".departure-display__departure-stop\");\n            this.departureHeadsign = this.querySelector(\".departure-display__departure-headsign\");\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.nextDeparture) {\n            if (this.renderedDeparture?.plannedDeparture !== this.nextDeparture.plannedDeparture ||\n                this.renderedDeparture?.delay !== this.nextDeparture.delay ||\n                this.renderedDeparture.isRealtime !== this.nextDeparture.isRealtime) {\n                let departureTime = new Date(this.nextDeparture.plannedDeparture.getTime() + this.nextDeparture.delay * 1000);\n                let depratureTimeFormatted = timeFormat.format(departureTime);\n                this.departureTime.setAttribute(\"time\", \"\" + (departureTime.getTime()));\n                this.departureTime.setAttribute(\"title\", `Abfahrt um ${depratureTimeFormatted}`);\n                let palannedDepatureFormatted = timeFormat.format(this.nextDeparture.plannedDeparture);\n                let delayed = palannedDepatureFormatted != depratureTimeFormatted;\n                this.plannedTime.innerText = `${this.nextDeparture.isRealtime ? delayed ? palannedDepatureFormatted : \"pünktlich\" : \"\"}`;\n                this.plannedTime.style.textDecoration = delayed ? \"line-through\" : \"none\";\n            }\n            if (this.renderedDeparture?.route.id !== this.nextDeparture.route.id) {\n                this.departureLine.setAttribute(RouteAttribute, this.nextDeparture.route.name);\n                this.departureLine.setAttribute(RouteColorAttribute, this.nextDeparture.route.color);\n                this.departureHeadsign.innerText = this.nextDeparture.route.headsign;\n            }\n            if (this.renderedDeparture?.stop.stopId !== this.nextDeparture.stop.stopId) {\n                this.departureStop.innerText = this.nextDeparture.stop.stopName;\n            }\n        }\n        this.renderedDeparture = this.nextDeparture;\n    }\n\n    update(data: Departure) {\n        this.nextDeparture = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"departure-display\", DepartureDisplay);\n","import template from \"./FlipDisplay.html\";\n\nexport const TextAttribute = \"text\";\n\nexport class FlipDisplay extends HTMLElement {\n\n    private isFront = true;\n    private beforeValue: string = null;\n    private frontSpan: HTMLSpanElement;\n    private backSpan: HTMLSpanElement;\n    private boxInner: HTMLSpanElement;\n    private actualSpan: HTMLSpanElement;\n    private animating = false;\n    private connected = false;\n    private queuedValue: string = null;\n    private listener: () => void;\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.frontSpan = shadowRoot.querySelector(\".front\");\n        this.backSpan = shadowRoot.querySelector(\".back\");\n        this.boxInner = shadowRoot.querySelector(\".box-inner\");\n        this.actualSpan = shadowRoot.querySelector(\".actual\");\n        this.listener = () => this.animationEnded();\n    }\n\n    connectedCallback() {\n        this.connected = true;\n        this.boxInner.addEventListener(\"animationend\", this.listener);\n    }\n\n    private animationEnded() {\n        this.animating = false;\n        if (this.queuedValue) {\n            this.updateAttributes();\n            this.queuedValue = null;\n        }\n    }\n\n    disconnectedCallback() {\n        this.connected = false;\n        this.boxInner.removeEventListener(\"animationend\", this.listener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TextAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TextAttribute);\n        if (!this.beforeValue) {\n            this.isFront = true;\n            this.frontSpan.innerText = value;\n            this.backSpan.innerText = \"\";\n            this.boxInner.classList.remove(\"show-back\");\n            this.boxInner.classList.remove(\"show-front\");\n            this.beforeValue = value;\n            this.actualSpan.innerText = value;\n        } else if (value !== this.beforeValue) {\n            if (this.animating) {\n                this.queuedValue = value;\n            } else {\n                this.isFront = !this.isFront;\n                if (this.isFront) {\n                    this.frontSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-back\");\n                    this.boxInner.classList.add(\"show-front\");\n                } else {\n                    this.backSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-front\");\n                    this.boxInner.classList.add(\"show-back\");\n                }\n                if (this.connected) {\n                    this.animating = true;\n                }\n                this.actualSpan.innerText = value;\n                this.beforeValue = value;\n            }\n        }\n    }\n}\n\ncustomElements.define(\"flip-display\", FlipDisplay);","// Module\nvar code = \"<style>.box{perspective:5em;display:inline-block}.box-inner{transform-style:preserve-3d;display:inline-block;position:relative;border-radius:2px;transition:transform,box-shadow;animation-timing-function:ease-in-out}.back,.front{backface-visibility:hidden;display:inline-block;position:absolute;left:0}.front{transform:rotateX(0)}.back{transform:rotateX(180deg)}.actual{visibility:hidden}.show-back{animation:flip-front-to-back .8s;transform:rotateX(180deg)}.show-front{animation:flip-back-to-front .8s;transform:rotateX(0)}@keyframes flip-back-to-front{0%{transform:rotateX(180deg);box-shadow:none}10%{transform:rotateX(180deg)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(360deg)}100%{transform:rotateX(360deg);box-shadow:none}}@keyframes flip-front-to-back{0%{transform:rotateX(0);box-shadow:none}10%{transform:rotateX(0)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(180deg)}100%{transform:rotateX(180deg);box-shadow:none}}</style><span class=\\\"box\\\"><span class=\\\"box-inner\\\"><span class=\\\"front\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"back\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"actual\\\"></span></span></span>\";\n// Exports\nexport default code;","import \"../FlipDisplay/FlipDisplay\";\nimport { FlipDisplay, TextAttribute } from \"../FlipDisplay/FlipDisplay\";\nimport template from \"./FlipTimeDisplay.html\";\n\nexport const TimeAttribute = \"time\";\n\nexport class FlipTimeDisplay extends HTMLElement {\n    private digits: FlipDisplay[];\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.digits = Array.from(shadowRoot.querySelectorAll(\"flip-display\"));\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TimeAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TimeAttribute);\n        let time = new Date(parseInt(value));\n        let hours = time.getHours();\n        let minutes = time.getMinutes();\n        this.digits[0].setAttribute(TextAttribute, ((hours / 10) >> 0).toString());\n        this.digits[1].setAttribute(TextAttribute, (hours % 10).toString());\n        this.digits[2].setAttribute(TextAttribute, ((minutes / 10) >> 0).toString());\n        this.digits[3].setAttribute(TextAttribute, (minutes % 10).toString());\n    }\n}\n\ncustomElements.define(\"flip-time-display\", FlipTimeDisplay);","// Module\nvar code = \"<flip-display></flip-display><flip-display></flip-display>:<flip-display></flip-display><flip-display></flip-display>\";\n// Exports\nexport default code;","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../icons/distance.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<a title=\\\"Details zur Route anzeigen\\\"> <departure-display></departure-display> <div class=\\\"route-summary__timeline-container\\\"> <route-timeline class=\\\"route-summary__timeline\\\"></route-timeline> <div class=\\\"route-summary__duration\\\" data-ref=\\\"duration-container\\\"> <img class=\\\"route-summary__icon-duration\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"Fahrtdauericon\\\"> <span data-ref=\\\"duration-label\\\" class=\\\"route-summary__duration-label\\\"> </span></div> </div> </a>\";\n// Exports\nexport default code;","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../icons/walking.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<img class=\\\"walking-display__img\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"gehende Person\\\"> <span class=\\\"walking-display__minutes\\\"></span>\";\n// Exports\nexport default code;","import template from \"./WalkingDisplay.html\";\nimport \"./WalkingDisplay.scss\";\n\nexport const MinutesAttribute = \"minutes\";\n\nexport class WalkingDisplay extends HTMLElement {\n\n    private rendered = false;\n    private minutesLabel: HTMLSpanElement;\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.minutesLabel = this.querySelector(\".walking-display__minutes\");\n            this.updateAttributes();\n        }\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [MinutesAttribute];\n    }\n\n    private updateAttributes() {\n        if (!this.rendered) {\n            return;\n        }\n        let label = this.getAttribute(MinutesAttribute);\n        this.minutesLabel.innerText = `${label}'`;\n    }\n\n    disconnectedCallback() {\n\n    }\n}\nexport const WalkingDisplayTagName = \"walking-display\";\ncustomElements.define(WalkingDisplayTagName, WalkingDisplay);\n","import { Itinerary } from \"../../lib/Itinerary\";\nimport { RouteAttribute, RouteColorAttribute, TransitDisplay, TransitDisplayTagName } from \"../TransitDisplay/TransitDisplay\";\nimport { MinutesAttribute, WalkingDisplay, WalkingDisplayTagName } from \"../WalkingDisplay/WalkingDisplay\";\nimport template from \"./RouteTimeline.html\";\nimport \"./RouteTimeline.scss\";\nimport \"../TransitDisplay/TransitDisplay\";\nimport \"../WalkingDisplay/WalkingDisplay\";\nimport { Leg } from \"../../lib/Leg\";\nimport { LegType } from \"../../lib/LegType\";\n\nconst timeFormat = Intl.DateTimeFormat([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nexport class RouteTimeline extends HTMLElement {\n    private rendered = false;\n    private departureTimeLabel: HTMLLIElement;\n    private arrivalTimeLabel: HTMLLIElement;\n    private timelineElements: HTMLLIElement[] = [];\n    itinerary: Itinerary;\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.departureTimeLabel = this.querySelector(\".route-timeline__departure-time\");\n            this.arrivalTimeLabel = this.querySelector(\".route-timeline__arrival-time\");\n        }\n        this.render();\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private reuseOrCreateElement<T extends HTMLElement>(recycleBin: HTMLLIElement[], tagName: string): T {\n        let element = recycleBin.find(e => e.children[0].tagName.localeCompare(tagName, undefined, { sensitivity: \"accent\" }) === 0);\n        let child: T;\n        if (element) {\n            recycleBin.splice(recycleBin.indexOf(element), 1);\n            child = element.children[0] as T;\n        }\n        else {\n            element = document.createElement(\"li\");\n            child = document.createElement(tagName) as T;\n            element.appendChild(child);\n        }\n        if (this.timelineElements.length == 0) {\n            this.departureTimeLabel.insertAdjacentElement(\"afterend\", element);\n        }\n        else {\n            this.timelineElements[this.timelineElements.length - 1].insertAdjacentElement(\"afterend\", element);\n        }\n        this.timelineElements.push(element);\n        return child;\n    }\n\n    private addWalkingLeg(duration: number, recycleBin: HTMLLIElement[]) {\n        let walkingDisplay = this.reuseOrCreateElement<WalkingDisplay>(recycleBin, WalkingDisplayTagName);\n        walkingDisplay.setAttribute(MinutesAttribute, `${Math.ceil(duration / 60000)}`);\n    }\n\n    addTransportLeg(leg: Leg, recycleBin: HTMLLIElement[]) {\n        let transitDisplay = this.reuseOrCreateElement<TransitDisplay>(recycleBin, TransitDisplayTagName);\n        transitDisplay.setAttribute(RouteAttribute, leg.route.name);\n        transitDisplay.setAttribute(RouteColorAttribute, leg.route.color);\n    }\n\n    update(itinerary: Itinerary) {\n        this.itinerary = itinerary;\n        this.render();\n    }\n\n    private render() {\n        if (!this.rendered || !this.itinerary || this.itinerary.legs.length === 0) {\n            return;\n        }\n        let departureTime = timeFormat.format(new Date(this.itinerary.legs[0].plannedDeparture.getTime() + this.itinerary.legs[0].delay * 1000));\n        this.departureTimeLabel.title = `Losgehen um ${departureTime}`;\n        this.departureTimeLabel.innerText = departureTime;\n        let arrivalTime = timeFormat.format(this.itinerary.legs[this.itinerary.legs.length - 1].arrivalTime);\n        this.arrivalTimeLabel.title = `Ankunft um ${arrivalTime}`;\n        this.arrivalTimeLabel.innerText = arrivalTime;\n        let recycleBin = this.timelineElements;\n        this.timelineElements = [];\n        let walkingDuration = 0;\n        for (let i = 0; i < this.itinerary.legs.length; i++) {\n            let leg = this.itinerary.legs[i];\n            switch (leg.type) {\n                case LegType.Walking:\n                    walkingDuration += leg.duration;\n                    let nextLeg = i < this.itinerary.legs.length - 1 ? this.itinerary.legs[i + 1] : null;\n                    if (!nextLeg || nextLeg.type != LegType.Walking) {\n                        if (i == 0 || i == this.itinerary.legs.length - 1 || walkingDuration > 2 * 60000) {\n                            this.addWalkingLeg(walkingDuration, recycleBin);\n                        }\n                        walkingDuration = 0;\n                    }\n                    break;\n                case LegType.Transit:\n                    this.addTransportLeg(leg, recycleBin);\n                    break;\n            }\n        }\n        for (let leg of this.itinerary.legs) {\n\n        }\n        for (let element of recycleBin) {\n            element.remove();\n        }\n    }\n}\n\n\ncustomElements.define(\"route-timeline\", RouteTimeline);\n","// Module\nvar code = \"<ol class=\\\"route-timeline\\\"> <li class=\\\"route-timeline__time route-timeline__departure-time\\\"></li> <li class=\\\"route-timeline__time route-timeline__arrival-time\\\"></li> </ol>\";\n// Exports\nexport default code;","import template from \"./RouteSummary.html\";\nimport \"./RouteSummary.scss\";\nimport \"../RouteTimeline/RouteTimeline\";\nimport \"../DepartureDisplay/DepartureDisplay\";\nimport { RouteTimeline } from \"../RouteTimeline/RouteTimeline\";\nimport { LegType } from \"../../lib/LegType\";\nimport { ItineraryDisplayModel } from \"../../state/models/ItineraryDisplayModel\";\nimport { AppRouter } from \"../../app-router\";\nimport { abortableEventListener } from \"../../utils/abortableEventListener\";\nimport { DepartureDisplay } from \"../DepartureDisplay/DepartureDisplay\";\n\nexport class RouteSummary extends HTMLElement {\n    private rendered = false;\n    private itinerary: ItineraryDisplayModel;\n    private timeLine: RouteTimeline;\n    private link: HTMLAnchorElement;\n    private router = AppRouter.getInstance();\n    private abortController: AbortController;\n    private departureDisplay: DepartureDisplay;\n    private durationContainer: HTMLDivElement;\n    private durationLabel: HTMLSpanElement;\n\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureDisplay = this.querySelector(\"departure-display\");\n            this.timeLine = this.querySelector(\".route-summary__timeline\");\n            this.link = this.querySelector(\"a\");\n            this.durationContainer = this.querySelector(\".route-summary__duration\");\n            this.durationLabel = this.querySelector(\".route-summary__duration-label\");\n            abortableEventListener(this.link, \"click\", (e) => {\n                e.preventDefault();\n                this.router.router.navigate(`r/${this.itinerary.itineraryUrlEncoded}`, \"pockmas - Route\");\n            }, this.abortController.signal);\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.itinerary.itinerary.legs.length > 0) {\n            let firstTransitLeg = this.itinerary.itinerary.legs.find(l => l.type == LegType.Transit);\n            if (firstTransitLeg) {\n                this.departureDisplay.update({\n                    delay: firstTransitLeg.delay,\n                    plannedDeparture: firstTransitLeg.plannedDeparture,\n                    route: firstTransitLeg.route,\n                    stop: firstTransitLeg.departureStop,\n                    tripId: firstTransitLeg.tripId,\n                    isRealtime: firstTransitLeg.isRealtime\n                });\n                this.link.href = `r/${this.itinerary.itineraryUrlEncoded}`;\n                this.timeLine.update(this.itinerary.itinerary);\n            }\n            else {\n                // TODO\n            }\n            let duration = this.itinerary.itinerary.legs[this.itinerary.itinerary.legs.length - 1].arrivalTime.getTime() - this.itinerary.itinerary.legs[0].plannedDeparture.getTime();\n            let durationMinutes = Math.ceil(duration / 60000);\n            this.durationLabel.innerText = `${durationMinutes}'`;\n            this.durationContainer.title = `Dauer ${durationMinutes} Minuten`;\n            this.durationLabel.innerText = `${durationMinutes}'`;\n        }\n    }\n\n    update(data: ItineraryDisplayModel) {\n        this.itinerary = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"route-summary\", RouteSummary);\n","import { Itinerary } from \"../../lib/Itinerary\";\nimport { ItineraryDisplayModel } from \"../../state/models/ItineraryDisplayModel\";\nimport { State, StateChanges } from \"../../state/State\";\nimport { Store } from \"../../state/Store\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { RouteSummary } from \"../RouteSummary/RouteSummary\";\nimport template from \"./RouteResultsList.html\";\nimport \"./RouteResultsList.scss\";\n\nexport class RouteResultsList extends HTMLElement {\n    private rendered = false;\n    private store: Store;\n    private abortController: AbortController;\n    private itineraries: ItineraryDisplayModel[] = [];\n    private renderer: ArrayToElementRenderer<ItineraryDisplayModel, RouteSummary, number>;\n\n    constructor() {\n        super();\n        this.store = Store.getInstance();\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.renderer = new ArrayToElementRenderer<ItineraryDisplayModel, RouteSummary, number>(this, e => this.itineraries.indexOf(e), e => new RouteSummary());\n        }\n        this.store.subscribe((s, c) => this.update(s, c), this.abortController.signal);\n        this.init(this.store.state);\n    }\n\n    private setResults(s: State) {\n        if (!s?.results) {\n            return;\n        }\n        this.itineraries = s.results;\n        this.renderer.update(this.itineraries, (c, i) => {\n            c.update(i)\n        });\n    }\n\n    private update(s: State, c: StateChanges) {\n        if (c.includes(\"results\")) {\n            this.setResults(s);    \n        }\n    }\n\n    private init(s: State) {\n        this.setResults(s);\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"route-results-list\", RouteResultsList);\n","// Module\nvar code = \"\";\n// Exports\nexport default code;","import template from \"./TransitDisplay.html\";\nimport \"./TransitDisplay.scss\";\n\nexport const RouteAttribute = \"route\";\nexport const RouteColorAttribute = \"route-color\";\n\nexport class TransitDisplay extends HTMLElement {\n    private rendered = false;\n    private routeLabel: HTMLSpanElement;\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.routeLabel = this.querySelector(\".transit-display__route\");\n            this.updateAttributes();\n        }\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [RouteAttribute, RouteColorAttribute];\n    }\n\n    private updateAttributes() {\n        if (!this.rendered) {\n            return;\n        }\n        let label = this.getAttribute(RouteAttribute) || \"\";\n        label = label.replace(/\\s/g, \"\");\n        this.routeLabel.classList.toggle(\"transit-display__route--long\", label.length > 3);\n        this.routeLabel.innerText = label;\n        let color = this.getAttribute(RouteColorAttribute);\n        this.style.backgroundColor = color ? `#${color}` : \"\";\n    }\n\n    disconnectedCallback() {\n\n    }\n}\nexport const TransitDisplayTagName = \"transit-display\";\ncustomElements.define(TransitDisplayTagName, TransitDisplay);\n","// Module\nvar code = \"<span class=\\\"transit-display__route\\\"></span>\";\n// Exports\nexport default code;","\nexport class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n\n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T, index: number) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T, index: number) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d, index);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find((i, index) => this.elementToKey.get(el) == getKey(i, index));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let i = 0; i < list.length; i++) {\n            let t = list[i];\n            let key = getKey(t, i);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}\n\n"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","___HTML_LOADER_IMPORT_0___","URL","timeFormat","Intl","DateTimeFormat","hour","minute","DepartureDisplay","HTMLElement","constructor","super","rendered","connectedCallback","this","abortController","AbortController","innerHTML","template","departureTime","querySelector","plannedTime","departureLine","departureStop","departureHeadsign","render","nextDeparture","renderedDeparture","plannedDeparture","delay","isRealtime","Date","getTime","depratureTimeFormatted","format","setAttribute","palannedDepatureFormatted","delayed","innerText","style","textDecoration","route","id","RouteAttribute","name","RouteColorAttribute","color","headsign","stop","stopId","stopName","update","data","disconnectedCallback","abort","customElements","define","TextAttribute","FlipDisplay","isFront","beforeValue","animating","connected","queuedValue","shadowRoot","attachShadow","mode","frontSpan","backSpan","boxInner","actualSpan","listener","animationEnded","addEventListener","updateAttributes","removeEventListener","attributeChangedCallback","observedAttributes","value","getAttribute","classList","remove","add","TimeAttribute","FlipTimeDisplay","digits","Array","from","querySelectorAll","time","parseInt","hours","getHours","minutes","getMinutes","toString","MinutesAttribute","WalkingDisplay","minutesLabel","label","WalkingDisplayTagName","RouteTimeline","timelineElements","departureTimeLabel","arrivalTimeLabel","reuseOrCreateElement","recycleBin","tagName","child","element","find","e","children","localeCompare","undefined","sensitivity","splice","indexOf","document","createElement","appendChild","length","insertAdjacentElement","push","addWalkingLeg","duration","Math","ceil","addTransportLeg","leg","transitDisplay","TransitDisplayTagName","itinerary","legs","title","arrivalTime","walkingDuration","i","type","nextLeg","RouteSummary","router","AppRouter","departureDisplay","timeLine","link","durationContainer","durationLabel","abortableEventListener","preventDefault","navigate","itineraryUrlEncoded","signal","firstTransitLeg","l","tripId","href","durationMinutes","RouteResultsList","itineraries","store","Store","renderer","ArrayToElementRenderer","subscribe","s","c","init","state","setResults","results","includes","TransitDisplay","routeLabel","replace","toggle","backgroundColor","listElement","keySelector","keyToElement","Map","elementToKey","WeakMap","list","updateElement","keyCache","getKey","d","index","get","key","set","x","el","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling"],"sourceRoot":""}