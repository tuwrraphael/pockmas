{"version":3,"file":"b062344d96610dd1ce2f.bundle.js","mappings":"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","sources":["webpack://pockmas/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.html","webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.ts","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.ts","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.html","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.ts","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.html","webpack://pockmas/./src/components/WalkingDisplay/WalkingDisplay.html","webpack://pockmas/./src/components/WalkingDisplay/WalkingDisplay.ts","webpack://pockmas/./src/components/RouteTimeline/RouteTimeline.ts","webpack://pockmas/./src/components/RouteTimeline/RouteTimeline.html","webpack://pockmas/./src/components/RouteSummary/RouteSummary.ts","webpack://pockmas/./src/components/RouteSummary/RouteSummary.html","webpack://pockmas/./src/components/RouteResultsList/RouteResultsList.ts","webpack://pockmas/./src/components/RouteResultsList/RouteResultsList.html","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.ts","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.html","webpack://pockmas/./src/utils/ArrayToElementRenderer.ts"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// Module\nvar code = \"<div class=\\\"departure-display__departure\\\"> <flip-time-display class=\\\"departure-display__departure-time\\\"></flip-time-display> <div> <transit-display class=\\\"departure-display__departure-line\\\"></transit-display> </div> <span class=\\\"departure-display__departure-stop\\\"></span> <span class=\\\"departure-display__planned-time\\\"></span> <span class=\\\"departure-display__departure-direction\\\">Richtung <span class=\\\"departure-display__departure-headsign\\\"></span> </span> </div>\";\n// Exports\nexport default code;","import template from \"./DepartureDisplay.html\";\nimport \"./DepartureDisplay.scss\";\nimport \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { RouteAttribute, RouteColorAttribute, TransitDisplay } from \"../TransitDisplay/TransitDisplay\";\nimport { FlipTimeDisplay } from \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { Departure } from \"../../lib/Departure\";\n\nconst timeFormat = Intl.DateTimeFormat([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nexport class DepartureDisplay extends HTMLElement {\n    private rendered = false;\n    private departureTime: FlipTimeDisplay;\n    private departureLine: TransitDisplay;\n    private departureStop: HTMLSpanElement;\n    private departureHeadsign: HTMLSpanElement;\n    private plannedTime: HTMLSpanElement;\n    private abortController: AbortController;\n    private departure: Departure;\n\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureTime = this.querySelector(\".departure-display__departure-time\");\n            this.plannedTime = this.querySelector(\".departure-display__planned-time\");\n            this.departureLine = this.querySelector(\".departure-display__departure-line\");\n            this.departureStop = this.querySelector(\".departure-display__departure-stop\");\n            this.departureHeadsign = this.querySelector(\".departure-display__departure-headsign\");\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.departure) {\n            let departureTime = new Date(this.departure.plannedDeparture.getTime() + this.departure.delay * 1000);\n            let depratureTimeFormatted = timeFormat.format(departureTime);\n            this.departureTime.setAttribute(\"time\", \"\" + (departureTime.getTime()));\n            this.departureTime.setAttribute(\"title\", `Abfahrt um ${depratureTimeFormatted}`);\n            let palannedDepatureFormatted = timeFormat.format(this.departure.plannedDeparture);\n            let delayed = palannedDepatureFormatted != depratureTimeFormatted;\n            this.plannedTime.innerText = `${this.departure.isRealtime ? delayed ? palannedDepatureFormatted : \"pünktlich\" : \"\"}`;\n            this.plannedTime.style.textDecoration = delayed ? \"line-through\" : \"none\";\n            this.departureLine.setAttribute(RouteAttribute, this.departure.route.name);\n            this.departureLine.setAttribute(RouteColorAttribute, this.departure.route.color);\n            this.departureStop.innerText = this.departure.stop.stopName;\n            this.departureHeadsign.innerText = this.departure.route.headsign;\n        }\n    }\n\n    update(data: Departure) {\n        this.departure = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"departure-display\", DepartureDisplay);\n","import template from \"./FlipDisplay.html\";\n\nexport const TextAttribute = \"text\";\n\nexport class FlipDisplay extends HTMLElement {\n\n    private isFront = true;\n    private beforeValue: string = null;\n    private frontSpan: HTMLSpanElement;\n    private backSpan: HTMLSpanElement;\n    private boxInner: HTMLSpanElement;\n    private actualSpan: HTMLSpanElement;\n    private animating = false;\n    private connected = false;\n    private queuedValue: string = null;\n    private listener: () => void;\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.frontSpan = shadowRoot.querySelector(\".front\");\n        this.backSpan = shadowRoot.querySelector(\".back\");\n        this.boxInner = shadowRoot.querySelector(\".box-inner\");\n        this.actualSpan = shadowRoot.querySelector(\".actual\");\n        this.listener = () => this.animationEnded();\n    }\n\n    connectedCallback() {\n        this.connected = true;\n        this.boxInner.addEventListener(\"animationend\", this.listener);\n    }\n\n    private animationEnded() {\n        this.animating = false;\n        if (this.queuedValue) {\n            this.updateAttributes();\n            this.queuedValue = null;\n        }\n    }\n\n    disconnectedCallback() {\n        this.connected = false;\n        this.boxInner.removeEventListener(\"animationend\", this.listener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TextAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TextAttribute);\n        if (!this.beforeValue) {\n            this.isFront = true;\n            this.frontSpan.innerText = value;\n            this.backSpan.innerText = \"\";\n            this.boxInner.classList.remove(\"show-back\");\n            this.boxInner.classList.remove(\"show-front\");\n            this.beforeValue = value;\n            this.actualSpan.innerText = value;\n        } else if (value !== this.beforeValue) {\n            if (this.animating) {\n                this.queuedValue = value;\n            } else {\n                this.isFront = !this.isFront;\n                if (this.isFront) {\n                    this.frontSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-back\");\n                    this.boxInner.classList.add(\"show-front\");\n                } else {\n                    this.backSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-front\");\n                    this.boxInner.classList.add(\"show-back\");\n                }\n                if (this.connected) {\n                    this.animating = true;\n                }\n                this.actualSpan.innerText = value;\n                this.beforeValue = value;\n            }\n        }\n    }\n}\n\ncustomElements.define(\"flip-display\", FlipDisplay);","// Module\nvar code = \"<style>.box{perspective:5em;display:inline-block}.box-inner{transform-style:preserve-3d;display:inline-block;position:relative;border-radius:2px;transition:transform,box-shadow;animation-timing-function:ease-in-out}.back,.front{backface-visibility:hidden;display:inline-block;position:absolute;left:0}.front{transform:rotateX(0)}.back{transform:rotateX(180deg)}.actual{visibility:hidden}.show-back{animation:flip-front-to-back .8s;transform:rotateX(180deg)}.show-front{animation:flip-back-to-front .8s;transform:rotateX(0)}@keyframes flip-back-to-front{0%{transform:rotateX(180deg);box-shadow:none}10%{transform:rotateX(180deg)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(360deg)}100%{transform:rotateX(360deg);box-shadow:none}}@keyframes flip-front-to-back{0%{transform:rotateX(0);box-shadow:none}10%{transform:rotateX(0)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(180deg)}100%{transform:rotateX(180deg);box-shadow:none}}</style><span class=\\\"box\\\"><span class=\\\"box-inner\\\"><span class=\\\"front\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"back\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"actual\\\"></span></span></span>\";\n// Exports\nexport default code;","import \"../FlipDisplay/FlipDisplay\";\nimport { FlipDisplay, TextAttribute } from \"../FlipDisplay/FlipDisplay\";\nimport template from \"./FlipTimeDisplay.html\";\n\nexport const TimeAttribute = \"time\";\n\nexport class FlipTimeDisplay extends HTMLElement {\n    private digits: FlipDisplay[];\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.digits = Array.from(shadowRoot.querySelectorAll(\"flip-display\"));\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TimeAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TimeAttribute);\n        let time = new Date(parseInt(value));\n        let hours = time.getHours();\n        let minutes = time.getMinutes();\n        this.digits[0].setAttribute(TextAttribute, ((hours / 10) >> 0).toString());\n        this.digits[1].setAttribute(TextAttribute, (hours % 10).toString());\n        this.digits[2].setAttribute(TextAttribute, ((minutes / 10) >> 0).toString());\n        this.digits[3].setAttribute(TextAttribute, (minutes % 10).toString());\n    }\n}\n\ncustomElements.define(\"flip-time-display\", FlipTimeDisplay);","// Module\nvar code = \"<flip-display></flip-display><flip-display></flip-display>:<flip-display></flip-display><flip-display></flip-display>\";\n// Exports\nexport default code;","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../icons/walking.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<img class=\\\"walking-display__img\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"gehende Person\\\"> <span class=\\\"walking-display__minutes\\\"></span>\";\n// Exports\nexport default code;","import template from \"./WalkingDisplay.html\";\nimport \"./WalkingDisplay.scss\";\n\nexport const MinutesAttribute = \"minutes\";\n\nexport class WalkingDisplay extends HTMLElement {\n\n    private rendered = false;\n    private minutesLabel: HTMLSpanElement;\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.minutesLabel = this.querySelector(\".walking-display__minutes\");\n            this.updateAttributes();\n        }\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [MinutesAttribute];\n    }\n\n    private updateAttributes() {\n        if (!this.rendered) {\n            return;\n        }\n        let label = this.getAttribute(MinutesAttribute);\n        this.minutesLabel.innerText = `${label}'`;\n    }\n\n    disconnectedCallback() {\n\n    }\n}\nexport const WalkingDisplayTagName = \"walking-display\";\ncustomElements.define(WalkingDisplayTagName, WalkingDisplay);\n","import { Itinerary } from \"../../lib/Itinerary\";\nimport { RouteAttribute, RouteColorAttribute, TransitDisplay, TransitDisplayTagName } from \"../TransitDisplay/TransitDisplay\";\nimport { MinutesAttribute, WalkingDisplay, WalkingDisplayTagName } from \"../WalkingDisplay/WalkingDisplay\";\nimport template from \"./RouteTimeline.html\";\nimport \"./RouteTimeline.scss\";\nimport \"../TransitDisplay/TransitDisplay\";\nimport \"../WalkingDisplay/WalkingDisplay\";\nimport { Leg } from \"../../lib/Leg\";\nimport { LegType } from \"../../lib/LegType\";\n\nconst timeFormat = Intl.DateTimeFormat([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nexport class RouteTimeline extends HTMLElement {\n    private rendered = false;\n    private departureTimeLabel: HTMLLIElement;\n    private arrivalTimeLabel: HTMLLIElement;\n    private timelineElements: HTMLLIElement[] = [];\n    itinerary: Itinerary;\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.departureTimeLabel = this.querySelector(\".route-timeline__departure-time\");\n            this.arrivalTimeLabel = this.querySelector(\".route-timeline__arrival-time\");\n        }\n        this.render();\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    private reuseOrCreateElement<T extends HTMLElement>(recycleBin: HTMLLIElement[], tagName: string): T {\n        let element = recycleBin.find(e => e.children[0].tagName.localeCompare(tagName, undefined, { sensitivity: \"accent\" }) === 0);\n        let child: T;\n        if (element) {\n            recycleBin.splice(recycleBin.indexOf(element), 1);\n            child = element.children[0] as T;\n        }\n        else {\n            element = document.createElement(\"li\");\n            child = document.createElement(tagName) as T;\n            element.appendChild(child);\n        }\n        if (this.timelineElements.length == 0) {\n            this.departureTimeLabel.insertAdjacentElement(\"afterend\", element);\n        }\n        else {\n            this.timelineElements[this.timelineElements.length - 1].insertAdjacentElement(\"afterend\", element);\n        }\n        this.timelineElements.push(element);\n        return child;\n    }\n\n    private addWalkingLeg(duration: number, recycleBin: HTMLLIElement[]) {\n        let walkingDisplay = this.reuseOrCreateElement<WalkingDisplay>(recycleBin, WalkingDisplayTagName);\n        walkingDisplay.setAttribute(MinutesAttribute, `${Math.ceil(duration / 60000)}`);\n    }\n\n    addTransportLeg(leg: Leg, recycleBin: HTMLLIElement[]) {\n        let transitDisplay = this.reuseOrCreateElement<TransitDisplay>(recycleBin, TransitDisplayTagName);\n        transitDisplay.setAttribute(RouteAttribute, leg.route.name);\n        transitDisplay.setAttribute(RouteColorAttribute, leg.route.color);\n    }\n\n    update(itinerary: Itinerary) {\n        this.itinerary = itinerary;\n        this.render();\n    }\n\n    private render() {\n        if (!this.rendered || !this.itinerary || this.itinerary.legs.length === 0) {\n            return;\n        }\n        let departureTime = timeFormat.format(new Date(this.itinerary.legs[0].plannedDeparture.getTime() + this.itinerary.legs[0].delay * 1000));\n        this.departureTimeLabel.title = `Losgehen um ${departureTime}`;\n        this.departureTimeLabel.innerText = departureTime;\n        let arrivalTime = timeFormat.format(this.itinerary.legs[this.itinerary.legs.length - 1].arrivalTime);\n        this.arrivalTimeLabel.title = `Ankunft um ${arrivalTime}`;\n        this.arrivalTimeLabel.innerText = arrivalTime;\n        let recycleBin = this.timelineElements;\n        this.timelineElements = [];\n        let walkingDuration = 0;\n        for (let i = 0; i < this.itinerary.legs.length; i++) {\n            let leg = this.itinerary.legs[i];\n            switch (leg.type) {\n                case LegType.Walking:\n                    walkingDuration += leg.duration;\n                    let nextLeg = i < this.itinerary.legs.length - 1 ? this.itinerary.legs[i + 1] : null;\n                    if (!nextLeg || nextLeg.type != LegType.Walking) {\n                        if (i == 0 || i == this.itinerary.legs.length - 1 || walkingDuration > 2 * 60000) {\n                            this.addWalkingLeg(walkingDuration, recycleBin);\n                        }\n                        walkingDuration = 0;\n                    }\n                    break;\n                case LegType.Transit:\n                    this.addTransportLeg(leg, recycleBin);\n                    break;\n            }\n        }\n        for (let leg of this.itinerary.legs) {\n\n        }\n        for (let element of recycleBin) {\n            element.remove();\n        }\n    }\n}\n\n\ncustomElements.define(\"route-timeline\", RouteTimeline);\n","// Module\nvar code = \"<ol class=\\\"route-timeline\\\"> <li class=\\\"route-timeline__time route-timeline__departure-time\\\"></li> <li class=\\\"route-timeline__time route-timeline__arrival-time\\\"></li> </ol>\";\n// Exports\nexport default code;","import template from \"./RouteSummary.html\";\nimport \"./RouteSummary.scss\";\nimport \"../RouteTimeline/RouteTimeline\";\nimport \"../DepartureDisplay/DepartureDisplay\";\nimport { RouteTimeline } from \"../RouteTimeline/RouteTimeline\";\nimport { LegType } from \"../../lib/LegType\";\nimport { ItineraryDisplayModel } from \"../../state/models/ItineraryDisplayModel\";\nimport { AppRouter } from \"../../app-router\";\nimport { abortableEventListener } from \"../../utils/abortableEventListener\";\nimport { DepartureDisplay } from \"../DepartureDisplay/DepartureDisplay\";\n\nexport class RouteSummary extends HTMLElement {\n    private rendered = false;\n    private itinerary: ItineraryDisplayModel;\n    private timeLine: RouteTimeline;\n    private link: HTMLAnchorElement;\n    private router = AppRouter.getInstance();\n    private abortController: AbortController;\n    private departureDisplay: DepartureDisplay;\n\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureDisplay = this.querySelector(\"departure-display\");\n            this.timeLine = this.querySelector(\".route-summary__timeline\");\n            this.link = this.querySelector(\"a\");\n            abortableEventListener(this.link, \"click\", (e) => {\n                e.preventDefault();\n                this.router.router.navigate(`r/${this.itinerary.itineraryUrlEncoded}`, \"pockmas - Route\");\n            }, this.abortController.signal);\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.itinerary.itinerary.legs.length > 0) {\n            let firstTransitLeg = this.itinerary.itinerary.legs.find(l => l.type == LegType.Transit);\n            if (firstTransitLeg) {\n                this.departureDisplay.update({\n                    delay: firstTransitLeg.delay,\n                    plannedDeparture: firstTransitLeg.plannedDeparture,\n                    route: firstTransitLeg.route,\n                    stop: firstTransitLeg.departureStop,\n                    tripId: firstTransitLeg.tripId,\n                    isRealtime: firstTransitLeg.isRealtime\n                });\n                this.link.href = `r/${this.itinerary.itineraryUrlEncoded}`;\n                this.timeLine.update(this.itinerary.itinerary);\n            }\n            else {\n                // TODO\n            }\n        }\n    }\n\n    update(data: ItineraryDisplayModel) {\n        this.itinerary = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"route-summary\", RouteSummary);\n","// Module\nvar code = \"<a title=\\\"Details zur Route anzeigen\\\"> <departure-display></departure-display> <route-timeline class=\\\"route-summary__timeline\\\"></route-timeline> </a>\";\n// Exports\nexport default code;","import { Itinerary } from \"../../lib/Itinerary\";\nimport { ItineraryDisplayModel } from \"../../state/models/ItineraryDisplayModel\";\nimport { State, StateChanges } from \"../../state/State\";\nimport { Store } from \"../../state/Store\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { RouteSummary } from \"../RouteSummary/RouteSummary\";\nimport template from \"./RouteResultsList.html\";\nimport \"./RouteResultsList.scss\";\n\nexport class RouteResultsList extends HTMLElement {\n    private rendered = false;\n    private store: Store;\n    private abortController: AbortController;\n    private itineraries: ItineraryDisplayModel[] = [];\n    private renderer: ArrayToElementRenderer<ItineraryDisplayModel, RouteSummary, number>;\n\n    constructor() {\n        super();\n        this.store = Store.getInstance();\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.renderer = new ArrayToElementRenderer<ItineraryDisplayModel, RouteSummary, number>(this, e => this.itineraries.indexOf(e), e => new RouteSummary());\n        }\n        this.store.subscribe((s, c) => this.update(s, c), this.abortController.signal);\n        this.init(this.store.state);\n    }\n\n    private setResults(s: State) {\n        if (!s?.results) {\n            return;\n        }\n        this.itineraries = s.results;\n        this.renderer.update(this.itineraries, (c, i) => {\n            c.update(i)\n        });\n    }\n\n    private update(s: State, c: StateChanges) {\n        if (c.includes(\"results\")) {\n            this.setResults(s);    \n        }\n    }\n\n    private init(s: State) {\n        this.setResults(s);\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"route-results-list\", RouteResultsList);\n","// Module\nvar code = \"\";\n// Exports\nexport default code;","import template from \"./TransitDisplay.html\";\nimport \"./TransitDisplay.scss\";\n\nexport const RouteAttribute = \"route\";\nexport const RouteColorAttribute = \"route-color\";\n\nexport class TransitDisplay extends HTMLElement {\n    private rendered = false;\n    private routeLabel : HTMLSpanElement;\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.routeLabel = this.querySelector(\".transit-display__route\");\n            this.updateAttributes();\n        }\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [RouteAttribute, RouteColorAttribute];\n    }\n\n    private updateAttributes() {\n        if (!this.rendered) {\n            return;\n        }\n        let label = this.getAttribute(RouteAttribute);\n        this.routeLabel.innerText = label;\n        let color = this.getAttribute(RouteColorAttribute);\n        this.style.backgroundColor = color ?`#${color}` : \"\";\n    }\n\n    disconnectedCallback() {\n\n    }\n}\nexport const TransitDisplayTagName = \"transit-display\";\ncustomElements.define(TransitDisplayTagName, TransitDisplay);\n","// Module\nvar code = \"<span class=\\\"transit-display__route\\\"></span>\";\n// Exports\nexport default code;","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","timeFormat","Intl","DateTimeFormat","hour","minute","DepartureDisplay","HTMLElement","constructor","super","rendered","connectedCallback","this","abortController","AbortController","innerHTML","departureTime","querySelector","plannedTime","departureLine","departureStop","departureHeadsign","render","departure","Date","plannedDeparture","getTime","delay","depratureTimeFormatted","format","setAttribute","palannedDepatureFormatted","delayed","innerText","isRealtime","style","textDecoration","RouteAttribute","route","name","RouteColorAttribute","color","stop","stopName","headsign","update","data","disconnectedCallback","abort","customElements","define","TextAttribute","FlipDisplay","isFront","beforeValue","animating","connected","queuedValue","shadowRoot","attachShadow","mode","frontSpan","backSpan","boxInner","actualSpan","listener","animationEnded","addEventListener","updateAttributes","removeEventListener","attributeChangedCallback","observedAttributes","value","getAttribute","classList","remove","add","TimeAttribute","FlipTimeDisplay","digits","Array","from","querySelectorAll","time","parseInt","hours","getHours","minutes","getMinutes","toString","___HTML_LOADER_IMPORT_0___","URL","MinutesAttribute","WalkingDisplay","template","minutesLabel","label","WalkingDisplayTagName","RouteTimeline","timelineElements","departureTimeLabel","arrivalTimeLabel","reuseOrCreateElement","recycleBin","tagName","child","element","find","e","children","localeCompare","undefined","sensitivity","splice","indexOf","document","createElement","appendChild","length","insertAdjacentElement","push","addWalkingLeg","duration","Math","ceil","addTransportLeg","leg","transitDisplay","TransitDisplayTagName","itinerary","legs","title","arrivalTime","walkingDuration","i","type","nextLeg","RouteSummary","router","AppRouter","departureDisplay","timeLine","link","abortableEventListener","preventDefault","navigate","itineraryUrlEncoded","signal","firstTransitLeg","l","tripId","href","RouteResultsList","itineraries","store","Store","renderer","ArrayToElementRenderer","subscribe","s","c","init","state","setResults","results","includes","TransitDisplay","routeLabel","backgroundColor","listElement","keySelector","keyToElement","Map","elementToKey","WeakMap","list","updateElement","keyCache","getKey","d","get","key","set","x","el","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling"],"sourceRoot":""}