{"version":3,"file":"e279efe101fcf83734a7.bundle.js","mappings":"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","sources":["webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.html","webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.ts","webpack://pockmas/./src/components/DepartureSummary/DepartureSummary.ts","webpack://pockmas/./src/components/DepartureSummary/DepartureSummary.html","webpack://pockmas/./src/components/DepartureResultsList/DepartureResultsList.ts","webpack://pockmas/./src/components/DepartureResultsList/DepartureResultsList.html","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.ts","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.html","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.ts","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.html","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.ts","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.html","webpack://pockmas/./src/utils/ArrayToElementRenderer.ts"],"sourcesContent":["// Module\nvar code = \"<div class=\\\"departure-display__departure\\\"> <flip-time-display class=\\\"departure-display__departure-time\\\"></flip-time-display> <div> <transit-display class=\\\"departure-display__departure-line\\\"></transit-display> </div> <span class=\\\"departure-display__departure-stop\\\"></span> <span class=\\\"departure-display__planned-time\\\"></span> <span class=\\\"departure-display__departure-direction\\\">Richtung <span class=\\\"departure-display__departure-headsign\\\"></span> </span> </div>\";\n// Exports\nexport default code;","import template from \"./DepartureDisplay.html\";\nimport \"./DepartureDisplay.scss\";\nimport \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { RouteAttribute, RouteColorAttribute, TransitDisplay } from \"../TransitDisplay/TransitDisplay\";\nimport { FlipTimeDisplay } from \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { Departure } from \"../../lib/Departure\";\n\nconst timeFormat = Intl.DateTimeFormat([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nexport class DepartureDisplay extends HTMLElement {\n    private rendered = false;\n    private departureTime: FlipTimeDisplay;\n    private departureLine: TransitDisplay;\n    private departureStop: HTMLSpanElement;\n    private departureHeadsign: HTMLSpanElement;\n    private plannedTime: HTMLSpanElement;\n    private abortController: AbortController;\n    private departure: Departure;\n\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureTime = this.querySelector(\".departure-display__departure-time\");\n            this.plannedTime = this.querySelector(\".departure-display__planned-time\");\n            this.departureLine = this.querySelector(\".departure-display__departure-line\");\n            this.departureStop = this.querySelector(\".departure-display__departure-stop\");\n            this.departureHeadsign = this.querySelector(\".departure-display__departure-headsign\");\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.departure) {\n            let departureTime = new Date(this.departure.plannedDeparture.getTime() + this.departure.delay * 1000);\n            let depratureTimeFormatted = timeFormat.format(departureTime);\n            this.departureTime.setAttribute(\"time\", \"\" + (departureTime.getTime()));\n            this.departureTime.setAttribute(\"title\", `Abfahrt um ${depratureTimeFormatted}`);\n            let palannedDepatureFormatted = timeFormat.format(this.departure.plannedDeparture);\n            let delayed = palannedDepatureFormatted != depratureTimeFormatted;\n            this.plannedTime.innerText = `${this.departure.isRealtime ? delayed ? palannedDepatureFormatted : \"p√ºnktlich\" : \"\"}`;\n            this.plannedTime.style.textDecoration = delayed ? \"line-through\" : \"none\";\n            this.departureLine.setAttribute(RouteAttribute, this.departure.route.name);\n            this.departureLine.setAttribute(RouteColorAttribute, this.departure.route.color);\n            this.departureStop.innerText = this.departure.stop.stopName;\n            this.departureHeadsign.innerText = this.departure.route.headsign;\n        }\n    }\n\n    update(data: Departure) {\n        this.departure = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"departure-display\", DepartureDisplay);\n","import template from \"./DepartureSummary.html\";\nimport \"./DepartureSummary.scss\";\nimport \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { Departure } from \"../../lib/Departure\";\nimport \"../DepartureDisplay/DepartureDisplay\";\nimport { DepartureDisplay } from \"../DepartureDisplay/DepartureDisplay\";\n\nexport class DepartureSummary extends HTMLElement {\n    private rendered = false;\n    private abortController: AbortController;\n    private departureDisplay: DepartureDisplay;\n    private departure: Departure;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureDisplay = this.querySelector(\"departure-display\");\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.departure) {\n            this.departureDisplay.update(this.departure);\n        }\n    }\n\n    update(data: Departure) {\n        this.departure = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"departure-summary\", DepartureSummary);\n","// Module\nvar code = \"<departure-display></departure-display>\";\n// Exports\nexport default code;","import { Departure } from \"../../lib/Departure\";\nimport { State, StateChanges } from \"../../state/State\";\nimport { Store } from \"../../state/Store\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { DepartureSummary } from \"../DepartureSummary/DepartureSummary\";\nimport template from \"./DepartureResultsList.html\";\nimport \"./DepartureResultsList.scss\";\n\nexport class DepartureResultsList extends HTMLElement {\n    private rendered = false;\n    private store: Store;\n    private abortController: AbortController;\n    private departures: Departure[] = [];\n    private renderer: ArrayToElementRenderer<Departure, DepartureSummary, number>;\n\n    constructor() {\n        super();\n        this.store = Store.getInstance();\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.renderer = new ArrayToElementRenderer<Departure, DepartureSummary, number>(this, e => this.departures.indexOf(e), e => new DepartureSummary());\n        }\n        this.store.subscribe((s, c) => this.update(s, c), this.abortController.signal);\n        this.init(this.store.state);\n    }\n\n    private setResults(s: State) {\n        if (!s?.departures) {\n            return;\n        }\n        this.departures = s.departures;\n        this.renderer.update(this.departures, (c, i) => {\n            c.update(i)\n        });\n    }\n\n    private update(s: State, c: StateChanges) {\n        if (c.includes(\"departures\")) {\n            this.setResults(s);    \n        }\n    }\n\n    private init(s: State) {\n        this.setResults(s);\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"departure-results-list\", DepartureResultsList);","// Module\nvar code = \"\";\n// Exports\nexport default code;","import template from \"./FlipDisplay.html\";\n\nexport const TextAttribute = \"text\";\n\nexport class FlipDisplay extends HTMLElement {\n\n    private isFront = true;\n    private beforeValue: string = null;\n    private frontSpan: HTMLSpanElement;\n    private backSpan: HTMLSpanElement;\n    private boxInner: HTMLSpanElement;\n    private actualSpan: HTMLSpanElement;\n    private animating = false;\n    private connected = false;\n    private queuedValue: string = null;\n    private listener: () => void;\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.frontSpan = shadowRoot.querySelector(\".front\");\n        this.backSpan = shadowRoot.querySelector(\".back\");\n        this.boxInner = shadowRoot.querySelector(\".box-inner\");\n        this.actualSpan = shadowRoot.querySelector(\".actual\");\n        this.listener = () => this.animationEnded();\n    }\n\n    connectedCallback() {\n        this.connected = true;\n        this.boxInner.addEventListener(\"animationend\", this.listener);\n    }\n\n    private animationEnded() {\n        this.animating = false;\n        if (this.queuedValue) {\n            this.updateAttributes();\n            this.queuedValue = null;\n        }\n    }\n\n    disconnectedCallback() {\n        this.connected = false;\n        this.boxInner.removeEventListener(\"animationend\", this.listener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TextAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TextAttribute);\n        if (!this.beforeValue) {\n            this.isFront = true;\n            this.frontSpan.innerText = value;\n            this.backSpan.innerText = \"\";\n            this.boxInner.classList.remove(\"show-back\");\n            this.boxInner.classList.remove(\"show-front\");\n            this.beforeValue = value;\n            this.actualSpan.innerText = value;\n        } else if (value !== this.beforeValue) {\n            if (this.animating) {\n                this.queuedValue = value;\n            } else {\n                this.isFront = !this.isFront;\n                if (this.isFront) {\n                    this.frontSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-back\");\n                    this.boxInner.classList.add(\"show-front\");\n                } else {\n                    this.backSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-front\");\n                    this.boxInner.classList.add(\"show-back\");\n                }\n                if (this.connected) {\n                    this.animating = true;\n                }\n                this.actualSpan.innerText = value;\n                this.beforeValue = value;\n            }\n        }\n    }\n}\n\ncustomElements.define(\"flip-display\", FlipDisplay);","// Module\nvar code = \"<style>.box{perspective:5em;display:inline-block}.box-inner{transform-style:preserve-3d;display:inline-block;position:relative;border-radius:2px;transition:transform,box-shadow;animation-timing-function:ease-in-out}.back,.front{backface-visibility:hidden;display:inline-block;position:absolute;left:0}.front{transform:rotateX(0)}.back{transform:rotateX(180deg)}.actual{visibility:hidden}.show-back{animation:flip-front-to-back .8s;transform:rotateX(180deg)}.show-front{animation:flip-back-to-front .8s;transform:rotateX(0)}@keyframes flip-back-to-front{0%{transform:rotateX(180deg);box-shadow:none}10%{transform:rotateX(180deg)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(360deg)}100%{transform:rotateX(360deg);box-shadow:none}}@keyframes flip-front-to-back{0%{transform:rotateX(0);box-shadow:none}10%{transform:rotateX(0)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(180deg)}100%{transform:rotateX(180deg);box-shadow:none}}</style><span class=\\\"box\\\"><span class=\\\"box-inner\\\"><span class=\\\"front\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"back\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"actual\\\"></span></span></span>\";\n// Exports\nexport default code;","import \"../FlipDisplay/FlipDisplay\";\nimport { FlipDisplay, TextAttribute } from \"../FlipDisplay/FlipDisplay\";\nimport template from \"./FlipTimeDisplay.html\";\n\nexport const TimeAttribute = \"time\";\n\nexport class FlipTimeDisplay extends HTMLElement {\n    private digits: FlipDisplay[];\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.digits = Array.from(shadowRoot.querySelectorAll(\"flip-display\"));\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TimeAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TimeAttribute);\n        let time = new Date(parseInt(value));\n        let hours = time.getHours();\n        let minutes = time.getMinutes();\n        this.digits[0].setAttribute(TextAttribute, ((hours / 10) >> 0).toString());\n        this.digits[1].setAttribute(TextAttribute, (hours % 10).toString());\n        this.digits[2].setAttribute(TextAttribute, ((minutes / 10) >> 0).toString());\n        this.digits[3].setAttribute(TextAttribute, (minutes % 10).toString());\n    }\n}\n\ncustomElements.define(\"flip-time-display\", FlipTimeDisplay);","// Module\nvar code = \"<flip-display></flip-display><flip-display></flip-display>:<flip-display></flip-display><flip-display></flip-display>\";\n// Exports\nexport default code;","import template from \"./TransitDisplay.html\";\nimport \"./TransitDisplay.scss\";\n\nexport const RouteAttribute = \"route\";\nexport const RouteColorAttribute = \"route-color\";\n\nexport class TransitDisplay extends HTMLElement {\n    private rendered = false;\n    private routeLabel : HTMLSpanElement;\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.routeLabel = this.querySelector(\".transit-display__route\");\n            this.updateAttributes();\n        }\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [RouteAttribute, RouteColorAttribute];\n    }\n\n    private updateAttributes() {\n        if (!this.rendered) {\n            return;\n        }\n        let label = this.getAttribute(RouteAttribute);\n        this.routeLabel.innerText = label;\n        let color = this.getAttribute(RouteColorAttribute);\n        this.style.backgroundColor = color ?`#${color}` : \"\";\n    }\n\n    disconnectedCallback() {\n\n    }\n}\nexport const TransitDisplayTagName = \"transit-display\";\ncustomElements.define(TransitDisplayTagName, TransitDisplay);\n","// Module\nvar code = \"<span class=\\\"transit-display__route\\\"></span>\";\n// Exports\nexport default code;","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}"],"names":["timeFormat","Intl","DateTimeFormat","hour","minute","DepartureDisplay","HTMLElement","constructor","super","rendered","connectedCallback","this","abortController","AbortController","innerHTML","departureTime","querySelector","plannedTime","departureLine","departureStop","departureHeadsign","render","departure","Date","plannedDeparture","getTime","delay","depratureTimeFormatted","format","setAttribute","palannedDepatureFormatted","delayed","innerText","isRealtime","style","textDecoration","RouteAttribute","route","name","RouteColorAttribute","color","stop","stopName","headsign","update","data","disconnectedCallback","abort","customElements","define","DepartureSummary","departureDisplay","DepartureResultsList","departures","store","Store","renderer","ArrayToElementRenderer","e","indexOf","subscribe","s","c","signal","init","state","setResults","i","includes","TextAttribute","FlipDisplay","isFront","beforeValue","animating","connected","queuedValue","shadowRoot","attachShadow","mode","frontSpan","backSpan","boxInner","actualSpan","listener","animationEnded","addEventListener","updateAttributes","removeEventListener","attributeChangedCallback","observedAttributes","value","getAttribute","classList","remove","add","TimeAttribute","FlipTimeDisplay","digits","Array","from","querySelectorAll","time","parseInt","hours","getHours","minutes","getMinutes","toString","TransitDisplay","routeLabel","label","backgroundColor","TransitDisplayTagName","listElement","keySelector","createElement","keyToElement","Map","elementToKey","WeakMap","list","updateElement","keyCache","getKey","d","get","key","set","x","children","el","find","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement"],"sourceRoot":""}