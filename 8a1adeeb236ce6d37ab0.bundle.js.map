{"version":3,"file":"8a1adeeb236ce6d37ab0.bundle.js","mappings":"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","sources":["webpack://pockmas/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.html","webpack://pockmas/./src/components/DepartureDisplay/DepartureDisplay.ts","webpack://pockmas/./src/state/actions/DisplayMoreDepartures.ts","webpack://pockmas/./src/components/DepartureSummary/DepartureSummary.ts","webpack://pockmas/./src/components/DepartureSummary/DepartureSummary.html","webpack://pockmas/./src/components/DepartureResultsList/DepartureResultsList.ts","webpack://pockmas/./src/components/DepartureResultsList/DepartureResultsList.html","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.ts","webpack://pockmas/./src/components/FlipDisplay/FlipDisplay.html","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.ts","webpack://pockmas/./src/components/FlipTimeDisplay/FlipTimeDisplay.html","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.ts","webpack://pockmas/./src/components/TransitDisplay/TransitDisplay.html","webpack://pockmas/./src/utils/ArrayToElementRenderer.ts"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../icons/transport_stop.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<div class=\\\"departure-display__departure\\\"> <flip-time-display class=\\\"departure-display__departure-time\\\"></flip-time-display> <div> <transit-display class=\\\"departure-display__departure-line\\\"></transit-display> </div> <span class=\\\"departure-display__departure-headsign\\\"></span> <span class=\\\"departure-display__planned-time\\\"></span> <span class=\\\"departure-display__departure-stop-display\\\"> <img class=\\\"departure-display__departure-stop-img\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" alt=\\\"Abfahrtsstation\\\">Abfahrt: <span class=\\\"departure-display__departure-stop\\\"></span> </span> </div>\";\n// Exports\nexport default code;","import template from \"./DepartureDisplay.html\";\nimport \"./DepartureDisplay.scss\";\nimport \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { RouteAttribute, RouteColorAttribute, TransitDisplay } from \"../TransitDisplay/TransitDisplay\";\nimport { FlipTimeDisplay } from \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { Departure } from \"../../lib/Departure\";\n\nconst timeFormat = Intl.DateTimeFormat([], { hour: \"2-digit\", minute: \"2-digit\" });\n\nexport class DepartureDisplay extends HTMLElement {\n    private rendered = false;\n    private departureTime: FlipTimeDisplay;\n    private departureLine: TransitDisplay;\n    private departureStop: HTMLSpanElement;\n    private departureHeadsign: HTMLSpanElement;\n    private plannedTime: HTMLSpanElement;\n    private abortController: AbortController;\n    private renderedDeparture: Departure;\n    private nextDeparture: Departure;\n\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureTime = this.querySelector(\".departure-display__departure-time\");\n            this.plannedTime = this.querySelector(\".departure-display__planned-time\");\n            this.departureLine = this.querySelector(\".departure-display__departure-line\");\n            this.departureStop = this.querySelector(\".departure-display__departure-stop\");\n            this.departureHeadsign = this.querySelector(\".departure-display__departure-headsign\");\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.nextDeparture) {\n            if (this.renderedDeparture?.plannedDeparture !== this.nextDeparture.plannedDeparture ||\n                this.renderedDeparture?.delay !== this.nextDeparture.delay ||\n                this.renderedDeparture.isRealtime !== this.nextDeparture.isRealtime) {\n                let departureTime = new Date(this.nextDeparture.plannedDeparture.getTime() + this.nextDeparture.delay * 1000);\n                let depratureTimeFormatted = timeFormat.format(departureTime);\n                this.departureTime.setAttribute(\"time\", \"\" + (departureTime.getTime()));\n                this.departureTime.setAttribute(\"title\", `Abfahrt um ${depratureTimeFormatted}`);\n                let palannedDepatureFormatted = timeFormat.format(this.nextDeparture.plannedDeparture);\n                let delayed = palannedDepatureFormatted != depratureTimeFormatted;\n                this.plannedTime.innerText = `${this.nextDeparture.isRealtime ? delayed ? palannedDepatureFormatted : \"pünktlich\" : \"\"}`;\n                this.plannedTime.style.textDecoration = delayed ? \"line-through\" : \"none\";\n            }\n            if (this.renderedDeparture?.route.id !== this.nextDeparture.route.id) {\n                this.departureLine.setAttribute(RouteAttribute, this.nextDeparture.route.name);\n                this.departureLine.setAttribute(RouteColorAttribute, this.nextDeparture.route.color);\n                this.departureHeadsign.innerText = this.nextDeparture.route.headsign;\n            }\n            if (this.renderedDeparture?.stop.stopId !== this.nextDeparture.stop.stopId) {\n                this.departureStop.innerText = this.nextDeparture.stop.stopName;\n            }\n        }\n        this.renderedDeparture = this.nextDeparture;\n    }\n\n    update(data: Departure) {\n        this.nextDeparture = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"departure-display\", DepartureDisplay);\n","import { Action } from \"./Action\";\nimport { ActionType } from \"./ActionType\";\n\n\nexport class DisplayMoreDepartures implements Action {\n    constructor() { }\n    readonly type = ActionType.DisplayMoreDepartures;\n}\n","import template from \"./DepartureSummary.html\";\nimport \"./DepartureSummary.scss\";\nimport \"../FlipTimeDisplay/FlipTimeDisplay\";\nimport { Departure } from \"../../lib/Departure\";\nimport \"../DepartureDisplay/DepartureDisplay\";\nimport { DepartureDisplay } from \"../DepartureDisplay/DepartureDisplay\";\n\nexport class DepartureSummary extends HTMLElement {\n    private rendered = false;\n    private abortController: AbortController;\n    private departureDisplay: DepartureDisplay;\n    private departure: Departure;\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.departureDisplay = this.querySelector(\"departure-display\");\n        }\n        this.render();\n    }\n\n    private render() {\n        if (this.rendered && this.departure) {\n            this.departureDisplay.update(this.departure);\n        }\n    }\n\n    update(data: Departure) {\n        this.departure = data;\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"departure-summary\", DepartureSummary);\n","// Module\nvar code = \"<departure-display></departure-display>\";\n// Exports\nexport default code;","import { Departure } from \"../../lib/Departure\";\nimport { DisplayMoreDepartures } from \"../../state/actions/DisplayMoreDepartures\";\nimport { State, StateChanges } from \"../../state/State\";\nimport { Store } from \"../../state/Store\";\nimport { ArrayToElementRenderer } from \"../../utils/ArrayToElementRenderer\";\nimport { DepartureSummary } from \"../DepartureSummary/DepartureSummary\";\nimport template from \"./DepartureResultsList.html\";\nimport \"./DepartureResultsList.scss\";\n\nexport class DepartureResultsList extends HTMLElement {\n    private rendered = false;\n    private store: Store;\n    private abortController: AbortController;\n    private departures: Departure[] = [];\n    private renderer: ArrayToElementRenderer<Departure, DepartureSummary, number>;\n    private intersectionObserver: IntersectionObserver;\n    private moreRequestedAt = 0;\n    private lastSelectedDest: number = null;\n\n    constructor() {\n        super();\n        this.store = Store.getInstance();\n    }\n\n    private requestMoreDepartures() {\n        this.store.postAction(new DisplayMoreDepartures());\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        this.intersectionObserver = new IntersectionObserver((intersections) => {\n            if (intersections.some(i => i.isIntersecting)) {\n                if (this.moreRequestedAt >= this.departures.length) {\n                    return;\n                } else {\n                    this.requestMoreDepartures();\n                }\n                this.moreRequestedAt = this.departures.length;\n            }\n        });\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.renderer = new ArrayToElementRenderer<Departure, DepartureSummary, number>(this, e => this.departures.indexOf(e), e => {\n                let s = new DepartureSummary();\n                return s;\n            });\n        }\n        this.store.subscribe((s, c) => this.update(s, c), this.abortController.signal);\n        this.init(this.store.state);\n\n    }\n\n    private setResults(s: State) {\n        if (!s?.departures) {\n            return;\n        }\n        this.departures = s.departures;\n        this.renderer.update(this.departures, (c, i) => {\n            c.update(i);\n        });\n        this.intersectionObserver.disconnect();\n        if (this.lastElementChild) {\n            this.intersectionObserver.observe(this.lastElementChild);\n        }\n\n    }\n\n    private update(s: State, c: StateChanges) {\n        if (c.includes(\"departures\")) {\n            this.setResults(s);\n        }\n        if (c.includes(\"selectedStopgroups\")) {\n            if (s.selectedStopgroups.departure?.id != this.lastSelectedDest) {\n                this.lastSelectedDest = s.selectedStopgroups.departure?.id;\n                this.moreRequestedAt = 0;\n            }\n        }\n    }\n\n    private init(s: State) {\n        this.setResults(s);\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n        this.intersectionObserver.disconnect();\n    }\n}\n\ncustomElements.define(\"departure-results-list\", DepartureResultsList);","// Module\nvar code = \"\";\n// Exports\nexport default code;","import template from \"./FlipDisplay.html\";\n\nexport const TextAttribute = \"text\";\n\nexport class FlipDisplay extends HTMLElement {\n\n    private isFront = true;\n    private beforeValue: string = null;\n    private frontSpan: HTMLSpanElement;\n    private backSpan: HTMLSpanElement;\n    private boxInner: HTMLSpanElement;\n    private actualSpan: HTMLSpanElement;\n    private animating = false;\n    private connected = false;\n    private queuedValue: string = null;\n    private listener: () => void;\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.frontSpan = shadowRoot.querySelector(\".front\");\n        this.backSpan = shadowRoot.querySelector(\".back\");\n        this.boxInner = shadowRoot.querySelector(\".box-inner\");\n        this.actualSpan = shadowRoot.querySelector(\".actual\");\n        this.listener = () => this.animationEnded();\n    }\n\n    connectedCallback() {\n        this.connected = true;\n        this.boxInner.addEventListener(\"animationend\", this.listener);\n    }\n\n    private animationEnded() {\n        this.animating = false;\n        if (this.queuedValue) {\n            this.updateAttributes();\n            this.queuedValue = null;\n        }\n    }\n\n    disconnectedCallback() {\n        this.connected = false;\n        this.boxInner.removeEventListener(\"animationend\", this.listener);\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TextAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TextAttribute);\n        if (!this.beforeValue) {\n            this.isFront = true;\n            this.frontSpan.innerText = value;\n            this.backSpan.innerText = \"\";\n            this.boxInner.classList.remove(\"show-back\");\n            this.boxInner.classList.remove(\"show-front\");\n            this.beforeValue = value;\n            this.actualSpan.innerText = value;\n        } else if (value !== this.beforeValue) {\n            if (this.animating) {\n                this.queuedValue = value;\n            } else {\n                this.isFront = !this.isFront;\n                if (this.isFront) {\n                    this.frontSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-back\");\n                    this.boxInner.classList.add(\"show-front\");\n                } else {\n                    this.backSpan.innerText = value;\n                    this.boxInner.classList.remove(\"show-front\");\n                    this.boxInner.classList.add(\"show-back\");\n                }\n                if (this.connected) {\n                    this.animating = true;\n                }\n                this.actualSpan.innerText = value;\n                this.beforeValue = value;\n            }\n        }\n    }\n}\n\ncustomElements.define(\"flip-display\", FlipDisplay);","// Module\nvar code = \"<style>.box{perspective:5em;display:inline-block}.box-inner{transform-style:preserve-3d;display:inline-block;position:relative;border-radius:2px;transition:transform,box-shadow;animation-timing-function:ease-in-out}.back,.front{backface-visibility:hidden;display:inline-block;position:absolute;left:0}.front{transform:rotateX(0)}.back{transform:rotateX(180deg)}.actual{visibility:hidden}.show-back{animation:flip-front-to-back .8s;transform:rotateX(180deg)}.show-front{animation:flip-back-to-front .8s;transform:rotateX(0)}@keyframes flip-back-to-front{0%{transform:rotateX(180deg);box-shadow:none}10%{transform:rotateX(180deg)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(360deg)}100%{transform:rotateX(360deg);box-shadow:none}}@keyframes flip-front-to-back{0%{transform:rotateX(0);box-shadow:none}10%{transform:rotateX(0)}50%{box-shadow:0 0 0 -1px rgb(0 0 0 / 20%),0 0 5px 0 rgb(0 0 0 / 14%),0 0 10px 0 rgb(0 0 0 / 12%)}90%{transform:rotateX(180deg)}100%{transform:rotateX(180deg);box-shadow:none}}</style><span class=\\\"box\\\"><span class=\\\"box-inner\\\"><span class=\\\"front\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"back\\\" aria-hidden=\\\"true\\\"></span><span class=\\\"actual\\\"></span></span></span>\";\n// Exports\nexport default code;","import \"../FlipDisplay/FlipDisplay\";\nimport { FlipDisplay, TextAttribute } from \"../FlipDisplay/FlipDisplay\";\nimport template from \"./FlipTimeDisplay.html\";\n\nexport const TimeAttribute = \"time\";\n\nexport class FlipTimeDisplay extends HTMLElement {\n    private digits: FlipDisplay[];\n\n    constructor() {\n        super();\n        let shadowRoot = this.attachShadow({ mode: \"open\" });\n        shadowRoot.innerHTML = template;\n        this.digits = Array.from(shadowRoot.querySelectorAll(\"flip-display\"));\n    }\n\n    connectedCallback() {\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [TimeAttribute];\n    }\n\n    private updateAttributes() {\n        let value = this.getAttribute(TimeAttribute);\n        let time = new Date(parseInt(value));\n        let hours = time.getHours();\n        let minutes = time.getMinutes();\n        this.digits[0].setAttribute(TextAttribute, ((hours / 10) >> 0).toString());\n        this.digits[1].setAttribute(TextAttribute, (hours % 10).toString());\n        this.digits[2].setAttribute(TextAttribute, ((minutes / 10) >> 0).toString());\n        this.digits[3].setAttribute(TextAttribute, (minutes % 10).toString());\n    }\n}\n\ncustomElements.define(\"flip-time-display\", FlipTimeDisplay);","// Module\nvar code = \"<flip-display></flip-display><flip-display></flip-display>:<flip-display></flip-display><flip-display></flip-display>\";\n// Exports\nexport default code;","import template from \"./TransitDisplay.html\";\nimport \"./TransitDisplay.scss\";\n\nexport const RouteAttribute = \"route\";\nexport const RouteColorAttribute = \"route-color\";\n\nexport class TransitDisplay extends HTMLElement {\n    private rendered = false;\n    private routeLabel: HTMLSpanElement;\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.innerHTML = template;\n            this.rendered = true;\n            this.routeLabel = this.querySelector(\".transit-display__route\");\n            this.updateAttributes();\n        }\n    }\n\n    attributeChangedCallback() {\n        this.updateAttributes();\n    }\n\n    static get observedAttributes() {\n        return [RouteAttribute, RouteColorAttribute];\n    }\n\n    private updateAttributes() {\n        if (!this.rendered) {\n            return;\n        }\n        let label = this.getAttribute(RouteAttribute) || \"\";\n        label = label.replace(/\\s/g, \"\");\n        this.routeLabel.classList.toggle(\"transit-display__route--long\", label.length > 3);\n        this.routeLabel.innerText = label;\n        let color = this.getAttribute(RouteColorAttribute);\n        this.style.backgroundColor = color ? `#${color}` : \"\";\n    }\n\n    disconnectedCallback() {\n\n    }\n}\nexport const TransitDisplayTagName = \"transit-display\";\ncustomElements.define(TransitDisplayTagName, TransitDisplay);\n","// Module\nvar code = \"<span class=\\\"transit-display__route\\\"></span>\";\n// Exports\nexport default code;","export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","___HTML_LOADER_IMPORT_0___","URL","timeFormat","Intl","DateTimeFormat","hour","minute","DepartureDisplay","HTMLElement","constructor","super","rendered","connectedCallback","this","abortController","AbortController","innerHTML","template","departureTime","querySelector","plannedTime","departureLine","departureStop","departureHeadsign","render","nextDeparture","renderedDeparture","plannedDeparture","delay","isRealtime","Date","getTime","depratureTimeFormatted","format","setAttribute","palannedDepatureFormatted","delayed","innerText","style","textDecoration","route","id","RouteAttribute","name","RouteColorAttribute","color","headsign","stop","stopId","stopName","update","data","disconnectedCallback","abort","customElements","define","DisplayMoreDepartures","type","DepartureSummary","departureDisplay","departure","DepartureResultsList","departures","moreRequestedAt","lastSelectedDest","store","Store","requestMoreDepartures","postAction","intersectionObserver","IntersectionObserver","intersections","some","i","isIntersecting","length","renderer","ArrayToElementRenderer","e","indexOf","subscribe","s","c","signal","init","state","setResults","disconnect","lastElementChild","observe","includes","selectedStopgroups","TextAttribute","FlipDisplay","isFront","beforeValue","animating","connected","queuedValue","shadowRoot","attachShadow","mode","frontSpan","backSpan","boxInner","actualSpan","listener","animationEnded","addEventListener","updateAttributes","removeEventListener","attributeChangedCallback","observedAttributes","value","getAttribute","classList","remove","add","TimeAttribute","FlipTimeDisplay","digits","Array","from","querySelectorAll","time","parseInt","hours","getHours","minutes","getMinutes","toString","TransitDisplay","routeLabel","label","replace","toggle","backgroundColor","TransitDisplayTagName","listElement","keySelector","createElement","keyToElement","Map","elementToKey","WeakMap","list","updateElement","keyCache","getKey","d","get","key","set","x","children","el","find","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement"],"sourceRoot":""}