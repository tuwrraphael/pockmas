{"version":3,"file":"0a66bf67658f70b910f0.bundle.js","mappings":"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","sources":["webpack://pockmas/webpack/runtime/chunk loaded","webpack://pockmas/webpack/runtime/create fake namespace object","webpack://pockmas/webpack/runtime/startup chunk dependencies","webpack://pockmas/./src/utils/copyToWasmMemory.ts","webpack://pockmas/./src/lib/RoutingService.ts","webpack://pockmas/./src/state/worker.ts","webpack://pockmas/webpack/bootstrap","webpack://pockmas/webpack/runtime/define property getters","webpack://pockmas/webpack/runtime/ensure chunk","webpack://pockmas/webpack/runtime/get javascript chunk filename","webpack://pockmas/webpack/runtime/get mini-css chunk filename","webpack://pockmas/webpack/runtime/global","webpack://pockmas/webpack/runtime/hasOwnProperty shorthand","webpack://pockmas/webpack/runtime/make namespace object","webpack://pockmas/webpack/runtime/publicPath","webpack://pockmas/webpack/runtime/importScripts chunk loading","webpack://pockmas/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(453),\n\t\t__webpack_require__.e(160)\n\t]).then(next);\n};","export async function copyToWasmMemory<T extends WebAssembly.Exports & { memory: WebAssembly.Memory; }>(instance: WebAssemblyInstance<T>,\n    res: Response,\n    numSizes: number,\n    getOffset: (instance: WebAssemblyInstance<T>, sizes: number[]) => number) {\n    let reader = res.body.getReader();\n    let done = false;\n    let offset;\n    let sizes = [];\n    let sizesBuffer = new Uint8Array(numSizes * 4);\n    let received = 0;\n    while (!done) {\n        let read = await reader.read();\n        done = read.done;\n        if (read.done) {\n            break;\n        }\n        let data = read.value;\n\n        if (sizes.length == 0) {\n            sizesBuffer.set(data.slice(0, Math.min(4 * numSizes - received, data.byteLength)), received);\n            received += data.byteLength;\n            if (received < numSizes * 4) {\n                continue;\n            } else {\n                let view = new DataView(sizesBuffer.buffer);\n                for (let i = 0; i < numSizes; i++) {\n                    sizes.push(view.getUint32(i * 4, true));\n                }\n                data = data.slice(numSizes * 4 - received);\n            }\n        }\n        if (sizes.length > 0 && offset == undefined) {\n            offset = getOffset(instance, sizes);\n        }\n        if (offset != undefined) {\n            new Uint8Array(instance.exports.memory.buffer, offset, data.length).set(data);\n            offset += data.length;\n        }\n    }\n}\n","import { findTimeZone, getUnixTime, getZonedTime } from \"timezone-support/dist/lookup-convert\";\nimport { RaptorExports } from \"../../raptor/wasm-exports\";\nimport { MonitorResponse } from \"../ogd_realtime/MonitorResponse\";\nimport { Itinerary } from \"./Itinerary\";\nimport { Leg } from \"./Leg\";\n\nexport interface RouteRequest {\n    departureStops: number[];\n    arrivalStop: number;\n    departureTimes: Date[];\n}\n\nconst RAPTOR_MAX_REQUEST_STATIONS = 20;\n\nconst RAPTOR_LEG_SIZE = 24;\nconst RAPTOR_MAX_LEGS = 10;\nconst RAPTOR_ITINERARY_SIZE = RAPTOR_MAX_LEGS * RAPTOR_LEG_SIZE + 4;\nconst RAPTOR_MAX_ITINERARIES = 8;\nconst RAPTOR_RESULTS_SIZE = RAPTOR_MAX_ITINERARIES * RAPTOR_ITINERARY_SIZE + 4;\n\nconst RAPTOR_MAX_STOPTIME_UPDATES = 5;\nconst RAPTOR_UPDATE_RESULT_SIZE = 2 + 2 + 2 + 2;\n\nconst RAPTOR_STOPTIME_UPDATE_SIZE = 4 + // diva\n    2 +  // linie\n    1 + // direction\n    1 + // weekday\n    4 + // date\n    1 + // apply\n    1 + // num_updates\n    2 + // padding\n    RAPTOR_MAX_STOPTIME_UPDATES * 4 + // time_real\n    RAPTOR_MAX_STOPTIME_UPDATES * RAPTOR_UPDATE_RESULT_SIZE + // results\n    RAPTOR_MAX_STOPTIME_UPDATES * 1; // matches\n\nfunction dayOfWeekToMask(date: Date) {\n    let mask = 0;\n    if (date.getDay() == 0) {\n        mask = 64;\n    } else {\n        mask = 1 << (date.getDay() - 1);\n    }\n    return mask;\n}\n\nexport class RoutingService {\n    private mappedRealtimeData: { [routeId: number]: Set<number> } = {};\n    constructor(private routingInstance: WebAssemblyInstance<RaptorExports>,\n        private routeNames: [string, string, number, string | null][],\n        private stops: [string, number][]) {\n\n    }\n\n    private getStartOfDayVienna(date: Date): number {\n        const vienna = findTimeZone(\"Europe/Vienna\");\n        const viennaTime = getZonedTime(date, vienna);\n        const startOfDayVienna = getUnixTime({\n            year: viennaTime.year,\n            month: viennaTime.month,\n            day: viennaTime.day,\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n        }, vienna);\n        return startOfDayVienna;\n    }\n\n    route(request: RouteRequest) {\n        performance.mark(\"routing-start\");\n        let requestMemory = this.routingInstance.exports.get_request_memory();\n        let view = new DataView(this.routingInstance.exports.memory.buffer, requestMemory, 4 + 4 + (RAPTOR_MAX_REQUEST_STATIONS + RAPTOR_MAX_REQUEST_STATIONS) * 2 + RAPTOR_MAX_REQUEST_STATIONS * 4);\n        view.setUint8(0, 0);\n        view.setUint8(1, Math.min(RAPTOR_MAX_REQUEST_STATIONS, request.departureStops.length));\n        view.setUint8(2, 1);\n        view.setUint8(3, dayOfWeekToMask(request.departureTimes[0]));\n        for (let i = 0; i < Math.min(RAPTOR_MAX_REQUEST_STATIONS, request.departureStops.length); i++) {\n            view.setUint16(4 + i * 2, request.departureStops[i], true);\n        }\n        view.setUint16(4 + RAPTOR_MAX_REQUEST_STATIONS * 2, request.arrivalStop, true);\n        let startOfDayVienna = this.getStartOfDayVienna(request.departureTimes[0]);\n        let departureDate = startOfDayVienna / 1000;\n        for (let i = 0; i < Math.min(RAPTOR_MAX_REQUEST_STATIONS, request.departureStops.length); i++) {\n            let departureTime = (+request.departureTimes[i] - startOfDayVienna) / 1000;\n            view.setUint32(4 + (RAPTOR_MAX_REQUEST_STATIONS + RAPTOR_MAX_REQUEST_STATIONS) * 2 + i * 4, departureTime, true);\n        }\n        view.setUint32(4 + (RAPTOR_MAX_REQUEST_STATIONS + RAPTOR_MAX_REQUEST_STATIONS) * 2 + RAPTOR_MAX_REQUEST_STATIONS * 4, departureDate, true);\n        let resOffset = this.routingInstance.exports.raptor();\n        performance.mark(\"routing-done\");\n        performance.measure(\"routing\", \"routing-start\", \"routing-done\");\n        console.log(`routing took ${(performance.getEntriesByName(\"routing\")[0]).duration}ms`);\n        performance.clearMarks();\n        performance.clearMeasures();\n        return this.readResults(this.routingInstance.exports.memory, resOffset, startOfDayVienna);\n    }\n\n    async updateRealtimeForStops(divas: number[]) {\n        let params = new URLSearchParams();\n        for (let diva of divas) {\n            params.append(\"diva\", diva.toString());\n        }\n        let res = await fetch(`https://realtime-api.grapp.workers.dev/ogd_realtime/monitor?${params}`);\n        let monitorResponse: MonitorResponse = await res.json();\n        for (let monitor of monitorResponse.data.monitors) {\n            for (let line of monitor.lines) {\n                let direction: number;\n                if (line.richtungsId == \"1\") {\n                    direction = 0;\n                } else if (line.richtungsId == \"2\") {\n                    direction = 1;\n                } else {\n                    throw new Error(`unknown richtungsId in monitor ${line.richtungsId}`);\n                }\n                let timeReal = line.departures.departure\n                    .filter(d => null != d.departureTime.timeReal)\n                    .map(d => new Date(d.departureTime.timeReal));\n                if (timeReal.length > 0) {\n                    this.upsertRealtimeData({\n                        diva: parseInt(monitor.locationStop.properties.name),\n                        linie: line.lineId,\n                        apply: true,\n                        direction: direction,\n                        timeReal: timeReal\n                    });\n                }\n            }\n        }\n\n    }\n\n    private readLeg(buffer: ArrayBuffer, offset: number, departureDate: number): Leg {\n        let view = new DataView(buffer, offset, RAPTOR_LEG_SIZE);\n        let departureStopId = view.getUint16(4, true);\n        let arrivalStopId = view.getUint16(6, true);\n        let departureSeconds = view.getUint32(8, true);\n        let arrivalSeconds = view.getUint32(12, true);\n        let leg: Leg = {\n            type: view.getUint32(0, true),\n            departureStop: {\n                stopId: departureStopId,\n                stopName: this.stops[departureStopId][0]\n            },\n            arrivalStop: {\n                stopId: arrivalStopId,\n                stopName: this.stops[arrivalStopId][0]\n            },\n            plannedDeparture: new Date(departureSeconds * 1000),\n            delay: view.getInt16(18, true),\n            arrivalTime: new Date(departureDate + arrivalSeconds * 1000),\n            duration: (departureDate / 1000 + arrivalSeconds - departureSeconds) * 1000,\n            route: null,\n            tripId: null,\n            isRealtime : false\n        };\n        if (leg.type == 1) {\n            let routeId = view.getUint16(16, true);\n            leg.route = {\n                name: this.routeNames[routeId][0],\n                color: this.routeNames[routeId].length > 3 ? this.routeNames[routeId][3] : (this.routeNames[routeId][2] == 0 ? \"c4121a\" : \"\"),\n                id: routeId,\n                headsign: this.routeNames[routeId][1]\n            };\n            leg.tripId = view.getUint32(20, true);\n            leg.isRealtime = this.mappedRealtimeData[leg.route.id]?.has(leg.tripId) || false;\n        }\n        return leg;\n    }\n\n    getDiva(stopId: number) {\n        return this.stops[stopId][1];\n    }\n\n    private readItinerary(buffer: ArrayBuffer, offset: number, departureDate: number): Itinerary {\n        let legs = [];\n        let view = new DataView(buffer, offset, RAPTOR_ITINERARY_SIZE);\n        let numLegs = view.getUint32(0, true);\n        for (let i = 0; i < numLegs; i++) {\n            legs.push(this.readLeg(buffer, offset + 4 + i * RAPTOR_LEG_SIZE, departureDate));\n        }\n        return { legs: legs.reverse() };\n    }\n\n    private readResults(memory: WebAssembly.Memory, offset: number, departureDate: number): Itinerary[] {\n        let itineraries = [];\n        let view = new DataView(memory.buffer, offset, RAPTOR_RESULTS_SIZE);\n        let numItineraries = view.getUint32(0, true);\n        for (let i = 0; i < numItineraries; i++) {\n            let itinerary = this.readItinerary(memory.buffer, offset + 4 + i * RAPTOR_ITINERARY_SIZE, departureDate);\n            itineraries.push(itinerary);\n        }\n        return itineraries;\n    }\n\n\n    private readStoptimeUpdate(buffer: ArrayBuffer, offset: number) {\n        let view = new DataView(buffer, offset, RAPTOR_STOPTIME_UPDATE_SIZE);\n        let routeId = view.getUint16(0, true);\n        let trip = view.getUint16(2, true);\n        let realtimeOffset = view.getInt16(4, true);\n        return {\n            routeId: routeId,\n            route: this.routeNames[routeId][0],\n            trip: trip,\n            realtimeOffset: realtimeOffset\n        };\n    }\n\n    getRealtimeUpdateResult() {\n        let memoryOffset = this.routingInstance.exports.get_stoptime_update_memory();\n        let dataView = new DataView(this.routingInstance.exports.memory.buffer, memoryOffset, RAPTOR_STOPTIME_UPDATE_SIZE);\n        let numUpdates = dataView.getUint8(13);\n        let updates = [];\n        for (let i = 0; i < numUpdates; i++) {\n            let update = this.readStoptimeUpdate(this.routingInstance.exports.memory.buffer, memoryOffset + 16 + (4 * RAPTOR_MAX_STOPTIME_UPDATES) + (i * RAPTOR_UPDATE_RESULT_SIZE));\n            updates.push({ ...update, numMatches: dataView.getUint8(16 + RAPTOR_MAX_STOPTIME_UPDATES * (RAPTOR_UPDATE_RESULT_SIZE + 4) + i) });\n        }\n        return updates;\n    }\n\n    upsertRealtimeData(updates: {\n        diva: number,\n        linie: number,\n        direction: number,\n        timeReal: Date[],\n        apply: boolean\n    }) {\n        let memoryOffset = this.routingInstance.exports.get_stoptime_update_memory();\n        let dataView = new DataView(this.routingInstance.exports.memory.buffer, memoryOffset, RAPTOR_STOPTIME_UPDATE_SIZE);\n        dataView.setUint32(0, updates.diva, true);\n        dataView.setUint16(4, updates.linie, true);\n        dataView.setUint8(6, updates.direction);\n        let date = this.getStartOfDayVienna(updates.timeReal[0]);\n        let weekday = dayOfWeekToMask(updates.timeReal[0]);\n        dataView.setUint8(7, weekday);\n        dataView.setUint32(8, date / 1000, true);\n        dataView.setUint8(12, updates.apply ? 1 : 0);\n        let numUpdates = Math.min(updates.timeReal.length, RAPTOR_MAX_STOPTIME_UPDATES);\n        dataView.setUint8(13, numUpdates);\n        for (let i = 0; i < numUpdates; i++) {\n            dataView.setUint32(16 + i * 4, (+updates.timeReal[i] - date) / 1000, true);\n        }\n        this.routingInstance.exports.process_realtime();\n        let res = this.getRealtimeUpdateResult();\n        for (let update of res) {\n            if (update.numMatches > 0) {\n                this.mappedRealtimeData[update.routeId] = this.mappedRealtimeData[update.routeId] || new Set();\n                this.mappedRealtimeData[update.routeId].add(update.trip);\n            }\n        }\n    }\n}","import { RaptorExports } from \"../../raptor/wasm-exports\";\nimport { StopSearchExports } from \"../../stopsearch/wasm-exports\";\nimport { ActionType } from \"./actions/ActionType\";\nimport { ArrivalStopTermChanged } from \"./actions/ArrivalStopTermChanged\";\nimport { DepartureStopTermChanged } from \"./actions/DepartureStopTermChanged\";\nimport { InitializeRouting } from \"./actions/InitializeRouting\";\nimport { InitializeStopSearch } from \"./actions/InitializeStopSearch\";\nimport { State } from \"./State\";\nimport { StopsSelected } from \"./actions/StopsSelected\";\nimport { populateTimeZones } from \"timezone-support/dist/lookup-convert\";\nimport { copyToWasmMemory } from \"../utils/copyToWasmMemory\";\nimport { RoutingService } from \"../lib/RoutingService\";\nimport { SetDepartureTime } from \"./actions/SetDepartureTime\";\n\ntype Actions = InitializeStopSearch\n    | DepartureStopTermChanged\n    | ArrivalStopTermChanged\n    | InitializeRouting\n    | StopsSelected\n    | SetDepartureTime;\n\nlet stopSearchInstance: WebAssemblyInstance<StopSearchExports>;\nlet routingInstance: RoutingService;\nlet stopGroupIndex: { name: string; stopIds: number[] }[];\nlet _departureTime: Date = null;\nlet _departure: number = null;\nlet _arrival: number = null;\n\nasync function initRouting() {\n    if (routingInstance) {\n        return;\n    }\n    let routeNamesTask = fetch(new URL(\"../../preprocessing-dist/routes.json\", import.meta.url).toString()).then(res => (res.json()) as Promise<[string, string, number, string | null][]>);\n    let stopNamesTask = fetch(new URL(\"../../preprocessing-dist/stops.json\", import.meta.url).toString()).then(res => res.json() as Promise<[string, number][]>);\n    let populateTimezonesTask = import(\"timezone-support/dist/data-2012-2022\").then(d => populateTimeZones(d));\n    let [instantiatedSource, binaryResponse] = await Promise.all([<Promise<WebAssemblyInstantiatedSource<RaptorExports>>>WebAssembly.instantiateStreaming(\n        fetch(new URL(\"../../raptor/raptor.wasm\", import.meta.url).toString())\n    ), fetch(new URL(\"../../preprocessing-dist/raptor_data.bin.bmp\", import.meta.url).toString())]);\n    let [routeNames, stops] = await Promise.all([routeNamesTask, stopNamesTask, populateTimezonesTask, copyToWasmMemory(instantiatedSource.instance, binaryResponse, 11,\n        (instance, sizes) => instance.exports.raptor_allocate(sizes[0], sizes[1], sizes[2], sizes[3], sizes[4], sizes[5], sizes[6], sizes[7], sizes[8], sizes[9], sizes[10]))]);\n    instantiatedSource.instance.exports.initialize();\n    routingInstance = new RoutingService(instantiatedSource.instance, routeNames, stops);\n}\n\nasync function initStopSearch() {\n    if (stopSearchInstance) {\n        return;\n    }\n    let stopGroupIndexTask = fetch(new URL(\"../../preprocessing-dist/stopgroup-index.json\", import.meta.url).toString()).then(res => res.json()).then(idx => stopGroupIndex = idx);\n    let [instantiatedSource, binaryResponse] = await Promise.all([<Promise<WebAssemblyInstantiatedSource<StopSearchExports>>>WebAssembly.instantiateStreaming(\n        fetch(new URL(\"../../stopsearch/stopsearch.wasm\", import.meta.url).toString())\n    ), fetch(new URL(\"../../preprocessing-dist/stop_search.bin.bmp\", import.meta.url).toString())]);\n    await Promise.all([stopGroupIndexTask, copyToWasmMemory(instantiatedSource.instance, binaryResponse, 4, (instance, sizes) => instance.exports.stopsearch_allocate(sizes[0] / 12, sizes[1], sizes[3] / 2))]);\n    instantiatedSource.instance.exports.stopsearch_reset();\n    stopSearchInstance = instantiatedSource.instance;\n}\n\nlet lastValue: string = \"\";\nlet state: State = {\n    arrivalStopResults: [],\n    departureStopResults: [],\n    results: []\n};\n\nfunction updateState(updateFn: (oldState: State) => Partial<State>) {\n    let update = updateFn(state);\n    state = {\n        ...state,\n        ...update\n    };\n    self.postMessage([update, Object.keys(update)]);\n}\n\nfunction searchTermChanged(term: string, departure: boolean) {\n    if (null == stopSearchInstance) {\n        return;\n    }\n    let value = term.toLowerCase()\n        .replace(/ä/g, \"a\")\n        .replace(/ö/g, \"o\")\n        .replace(/ü/g, \"u\")\n        .replace(/ß/g, \"ss\")\n        .replace(/[^a-z0-9]/g, \" \")\n        .replace(/ +(?= )/g, '')\n        .trim()\n    if (value == lastValue) {\n        return;\n    }\n    let result;\n    if (value.length == lastValue.length + 1 && value.startsWith(lastValue)) {\n        result = stopSearchInstance.exports.stopsearch_step(value.charCodeAt(value.length - 1));\n    } else {\n        result = stopSearchInstance.exports.stopsearch_reset();\n        for (let i = 0; i < value.length; i++) {\n            result = stopSearchInstance.exports.stopsearch_step(value.charCodeAt(i));\n        }\n    }\n    lastValue = value;\n    let resultArrayView = new DataView(stopSearchInstance.exports.memory.buffer, result, 2 * 4);\n    let resultsCount = resultArrayView.getUint32(0, true);\n    let resultsOffset = resultArrayView.getUint32(4, true);\n    let resultsArray = new Uint16Array(stopSearchInstance.exports.memory.buffer, resultsOffset, resultsCount);\n    let results: { id: number, name: string }[] = [];\n    for (let i = 0; i < resultsCount; i++) {\n        let stopGroupId = resultsArray[i];\n        let stopGroup = stopGroupIndex[stopGroupId];\n        results.push({ id: stopGroupId, name: stopGroup.name });\n    }\n    updateState(s => ({\n        [departure ? \"departureStopResults\" : \"arrivalStopResults\"]: results\n    }));\n}\n\nasync function stopsSelected(d: number, a: number) {\n    _departure = d;\n    _arrival = a;\n    _departureTime = new Date();\n    route();\n}\n\nasync function departureTimeInc(inc: number) {\n    if (null == _departureTime) {\n        return;\n    }\n    _departureTime = new Date(_departureTime.getTime() + inc);\n    if (null != _departure && null != _arrival) {\n        route();\n    }\n}\n\nasync function route() {\n    if (null == routingInstance) {\n        return;\n    }\n    let departureStops = stopGroupIndex[state.departureStopResults[_departure].id].stopIds;\n    let arrivalStop = stopGroupIndex[state.arrivalStopResults[_arrival].id].stopIds[0];\n\n    let lookedUpDivas = new Set<number>();\n    for (let i = 0; i < 10; i++) {\n        let results = routingInstance.route({\n            arrivalStop: arrivalStop,\n            departureStops: departureStops,\n            departureTimes: departureStops.map(() => _departureTime)\n        });\n        updateState(() => ({ results: results }));\n        let divas = results.reduce((divas, itinerary) => [...divas, ...itinerary.legs.map(l => routingInstance.getDiva(l.departureStop.stopId))], [])\n            .filter(d => !lookedUpDivas.has(d));\n        if (divas.length == 0) {\n            break;\n        }\n        await routingInstance.updateRealtimeForStops(Array.from(new Set(divas).values()));\n        for (let diva of divas) {\n            lookedUpDivas.add(diva);\n        }\n    }\n}\n\n\nasync function handleMessage(msg: Actions) {\n    switch (msg.type) {\n        case ActionType.InitializeStopSearch:\n            await initStopSearch();\n            break;\n        case ActionType.DepartureStopTermChanged: {\n            searchTermChanged(msg.term, true);\n            break;\n        }\n        case ActionType.ArrivalStopTermChanged: {\n            searchTermChanged(msg.term, false);\n            break;\n        }\n        case ActionType.InitializeRouting: {\n            await initRouting();\n            break;\n        }\n        case ActionType.StopsSelected: {\n            stopsSelected(msg.departure, msg.arrival);\n            break;\n        }\n        case ActionType.SetDepartureTime: {\n            departureTimeInc(msg.increment);\n            break;\n        }\n    }\n}\n\nself.addEventListener(\"message\", ev => {\n    let msg: Actions = ev.data;\n    handleMessage(msg).catch(err => console.error(err));\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [453,160], function() { return __webpack_require__(8531); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + {\"160\":\"6cda0051ca11e071161d\",\"453\":\"8ee0f0e811214f73347f\",\"955\":\"aca8258eee8d7b804046\"}[chunkId] + \".bundle.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t531: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkpockmas\"] = self[\"webpackChunkpockmas\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","next","async","copyToWasmMemory","instance","res","numSizes","getOffset","offset","reader","body","getReader","done","sizes","sizesBuffer","Uint8Array","received","read","data","value","length","set","slice","Math","min","byteLength","view","DataView","buffer","i","push","getUint32","undefined","exports","memory","dayOfWeekToMask","date","mask","getDay","RoutingService","constructor","routingInstance","routeNames","stops","mappedRealtimeData","getStartOfDayVienna","vienna","viennaTime","year","month","day","hours","minutes","seconds","route","request","performance","mark","requestMemory","this","get_request_memory","setUint8","departureStops","departureTimes","setUint16","arrivalStop","startOfDayVienna","departureDate","departureTime","setUint32","resOffset","raptor","measure","console","log","getEntriesByName","duration","clearMarks","clearMeasures","readResults","divas","params","URLSearchParams","diva","append","toString","fetch","monitorResponse","json","monitor","monitors","line","lines","direction","richtungsId","Error","timeReal","departures","departure","filter","d","map","Date","upsertRealtimeData","parseInt","locationStop","properties","name","linie","lineId","apply","readLeg","departureStopId","getUint16","arrivalStopId","departureSeconds","arrivalSeconds","leg","type","departureStop","stopId","stopName","plannedDeparture","delay","getInt16","arrivalTime","tripId","isRealtime","routeId","color","id","headsign","has","getDiva","readItinerary","legs","numLegs","RAPTOR_MAX_LEGS","reverse","itineraries","numItineraries","RAPTOR_MAX_ITINERARIES","itinerary","readStoptimeUpdate","trip","realtimeOffset","getRealtimeUpdateResult","memoryOffset","get_stoptime_update_memory","dataView","numUpdates","getUint8","updates","update","numMatches","weekday","process_realtime","Set","add","stopSearchInstance","stopGroupIndex","_departureTime","_departure","_arrival","lastValue","state","arrivalStopResults","departureStopResults","results","updateState","updateFn","self","postMessage","Object","keys","searchTermChanged","term","result","toLowerCase","replace","trim","startsWith","stopsearch_step","charCodeAt","stopsearch_reset","resultArrayView","resultsCount","resultsOffset","resultsArray","Uint16Array","stopGroupId","stopGroup","s","stopIds","lookedUpDivas","reduce","l","updateRealtimeForStops","Array","from","values","addEventListener","ev","msg","stopGroupIndexTask","URL","then","idx","instantiatedSource","binaryResponse","Promise","all","WebAssembly","instantiateStreaming","stopsearch_allocate","initStopSearch","routeNamesTask","stopNamesTask","populateTimezonesTask","raptor_allocate","initialize","initRouting","a","stopsSelected","arrival","inc","getTime","departureTimeInc","increment","handleMessage","catch","err","error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","m","x","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","r","getPrototypeOf","obj","__proto__","t","mode","__esModule","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","f","e","chunkId","promises","u","miniCssF","g","globalThis","Function","window","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","b","location","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}