{"version":3,"file":"953c3c133581b4f55f88.bundle.js","mappings":"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","sources":["webpack://pockmas/webpack/runtime/chunk loaded","webpack://pockmas/webpack/runtime/create fake namespace object","webpack://pockmas/webpack/runtime/startup chunk dependencies","webpack://pockmas/./src/utils/copyToWasmMemory.ts","webpack://pockmas/./src/lib/RouteUrlEncoder.ts","webpack://pockmas/./src/lib/RouteInfoStore.ts","webpack://pockmas/./src/lib/getStartOfDayVienna.ts","webpack://pockmas/./src/lib/RoutingService.ts","webpack://pockmas/./src/lib/RouteDetailsService.ts","webpack://pockmas/./src/state/worker.ts","webpack://pockmas/./src/lib/RoutingServicesFactory.ts","webpack://pockmas/webpack/bootstrap","webpack://pockmas/webpack/runtime/define property getters","webpack://pockmas/webpack/runtime/ensure chunk","webpack://pockmas/webpack/runtime/get javascript chunk filename","webpack://pockmas/webpack/runtime/get mini-css chunk filename","webpack://pockmas/webpack/runtime/global","webpack://pockmas/webpack/runtime/hasOwnProperty shorthand","webpack://pockmas/webpack/runtime/make namespace object","webpack://pockmas/webpack/runtime/publicPath","webpack://pockmas/webpack/runtime/importScripts chunk loading","webpack://pockmas/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(453),\n\t\t__webpack_require__.e(541)\n\t]).then(next);\n};","export async function copyToWasmMemory<T extends WebAssembly.Exports & { memory: WebAssembly.Memory; }>(instance: WebAssemblyInstance<T>,\n    res: Response,\n    numSizes: number,\n    getOffset: (instance: WebAssemblyInstance<T>, sizes: number[]) => number) {\n    let reader = res.body.getReader();\n    let done = false;\n    let offset;\n    let sizes = [];\n    let sizesBuffer = new Uint8Array(numSizes * 4);\n    let received = 0;\n    while (!done) {\n        let read = await reader.read();\n        done = read.done;\n        if (read.done) {\n            break;\n        }\n        let data = read.value;\n\n        if (sizes.length == 0) {\n            sizesBuffer.set(data.slice(0, Math.min(4 * numSizes - received, data.byteLength)), received);\n            received += data.byteLength;\n            if (received < numSizes * 4) {\n                continue;\n            } else {\n                let view = new DataView(sizesBuffer.buffer);\n                for (let i = 0; i < numSizes; i++) {\n                    sizes.push(view.getUint32(i * 4, true));\n                }\n                data = data.slice(numSizes * 4 - received);\n            }\n        }\n        if (sizes.length > 0 && offset == undefined) {\n            offset = getOffset(instance, sizes);\n        }\n        if (offset != undefined) {\n            new Uint8Array(instance.exports.memory.buffer, offset, data.length).set(data);\n            offset += data.length;\n        }\n    }\n}\n","import { LegType } from \"./LegType\";\nimport { Base64 } from \"js-base64\";\nimport { LegStop } from \"./LegStop\";\n\nconst UrlVersion = 1;\n\ninterface DecodedItinerary {\n    departureTime: Date;\n    version: number;\n    legs: {\n        type: LegType;\n        departureStopId: number;\n        arrivalStopId: number;\n        routeId: number;\n        tripId: number;\n    }[];\n\n}\n\nclass DataVersionMismatchError extends Error {\n    constructor(public expected: string, public actual: string) {\n        super(`Data version mismatch - expected ${expected}, actual ${actual}`);\n    }\n}\n\nexport class RouteUrlEncoder {\n    public readonly UrlVersion = UrlVersion;\n\n    constructor(private dataVersion: string) {\n\n    }\n\n    encode(r: {\n        legs: {\n            type: LegType;\n            departureStop: LegStop;\n            arrivalStop: LegStop;\n            route: {\n                id: number;\n            };\n            tripId: number | null;\n            plannedDeparture: Date;\n        }[]\n    }): string {\n        let binary = new Uint8Array(1 + 4 + r.legs.filter(v => v.type == LegType.Transit).length * 9 +\n            r.legs.filter(v => v.type == LegType.Walking).length * 5);\n        let view = new DataView(binary.buffer);\n        view.setUint8(0, r.legs.length);\n        view.setUint32(1, r.legs.length > 0 ? (r.legs[0].plannedDeparture.getTime() / 1000) : 0, true);\n        let offset = 5;\n        for (let l of r.legs) {\n            view.setUint8(offset + 0, l.type);\n            view.setUint16(offset + 1, l.departureStop.stopId, true);\n            view.setUint16(offset + 3, l.arrivalStop.stopId, true);\n            offset += 5;\n            if (l.type === LegType.Transit) {\n                view.setUint16(offset, l.route?.id || 0, true);\n                view.setUint16(offset + 2, l.tripId || 0, true);\n                offset += 4;\n            }\n        }\n        return `${UrlVersion}${Base64.fromUint8Array(binary, true)}!${this.dataVersion}`;\n    }\n\n    decode(url: string): DecodedItinerary {\n        let version = parseInt(url.substr(0, 1));\n        switch (version) {\n            case 1:\n                return this.decodeV1(url);\n            default:\n                break;\n        }\n        throw new Error(`Unsupported version ${version}`);\n    }\n\n    private decodeV1(url: string): DecodedItinerary {\n        let [data, dataVersion] = url.substr(1).split(\"!\");\n        if (dataVersion !== this.dataVersion) {\n            throw new DataVersionMismatchError(this.dataVersion, dataVersion);\n        }\n        let binary = Base64.toUint8Array(data);\n        let view = new DataView(binary.buffer);\n        let numLegs = view.getUint8(0);\n        let departureTime = new Date(view.getUint32(1, true) * 1000);\n        let legs: {\n            type: LegType;\n            departureStopId: number;\n            arrivalStopId: number;\n            routeId: number;\n            tripId: number;\n        }[] = [];\n        let offset = 5;\n        for (let i = 0; i < numLegs; i++) {\n            let type = view.getUint8(offset + 0);\n            let departureStopId = view.getUint16(offset + 1, true);\n            let arrivalStopId = view.getUint16(offset + 3, true);\n            offset += 5;\n            if (type === LegType.Transit) {\n                let routeId = view.getUint16(offset, true);\n                let tripId = view.getUint16(offset + 2, true);\n                offset += 4;\n                legs.push({\n                    type,\n                    departureStopId,\n                    arrivalStopId,\n                    routeId,\n                    tripId\n                });\n            } else {\n                legs.push({\n                    type,\n                    departureStopId,\n                    arrivalStopId,\n                    routeId: null,\n                    tripId: null\n                });\n            }\n        }\n        return {\n            departureTime,\n            version: 1,\n            legs\n        };\n    }\n\n\n}","export class RouteInfoStore {\n    constructor(private routeNames: [string, string, number, string | null][],\n        private stops: [string, number][]) {\n\n    }\n\n    getDiva(stopId: number) {\n        return this.stops[stopId][1];\n    }\n\n    getStop(stopId: number): {\n        stopId: number;\n        stopName: string;\n    } {\n        if (stopId > this.stops.length) {\n            throw new Error(`Invalid stop id ${stopId}`);\n        }\n        return {\n            stopId: stopId,\n            stopName: this.stops[stopId][0]\n        };\n    }\n\n    getRoute(routeId: number): {\n        name: string;\n        id: number;\n        color: string;\n        headsign: string;\n    } {\n        if (routeId > this.routeNames.length) {\n            throw new Error(`Invalid route id ${routeId}`);\n        }\n        return {\n            name: this.routeNames[routeId][0],\n            id: routeId,\n            color: this.routeNames[routeId].length > 3 ? this.routeNames[routeId][3] : (this.routeNames[routeId][2] == 0 ? \"c4121a\" : \"\"),\n            headsign: this.routeNames[routeId][1]\n        };\n    }\n}","import { findTimeZone, getUnixTime, getZonedTime } from \"timezone-support/dist/lookup-convert\";\n\nfunction dayOfWeekToMask(dayOfWeek: number): number {\n    let mask = 0;\n    if (dayOfWeek == 0) {\n        mask = 64;\n    } else {\n        mask = 1 << (dayOfWeek - 1);\n    }\n    return mask;\n}\n\nexport function getStartOfDayVienna(date: Date) {\n    const vienna = findTimeZone(\"Europe/Vienna\");\n    const viennaTime = getZonedTime(date, vienna);\n    const startOfDayVienna = getUnixTime({\n        year: viennaTime.year,\n        month: viennaTime.month,\n        day: viennaTime.day,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n    }, vienna);\n    return { unixTime: startOfDayVienna, dayOfWeek: dayOfWeekToMask(viennaTime.dayOfWeek) };\n}\n","import { RaptorExports } from \"../../raptor/wasm-exports\";\nimport { MonitorResponse } from \"../ogd_realtime/MonitorResponse\";\nimport { getStartOfDayVienna } from \"./getStartOfDayVienna\";\nimport { Itinerary } from \"./Itinerary\";\nimport { Leg } from \"./Leg\";\nimport { RouteInfoStore } from \"./RouteInfoStore\";\n\nexport interface RouteRequest {\n    departureStops: number[];\n    arrivalStop: number;\n    departureTimes: Date[];\n}\n\nconst RAPTOR_MAX_REQUEST_STATIONS = 20;\n\nconst RAPTOR_LEG_SIZE = 24;\nconst RAPTOR_MAX_LEGS = 10;\nconst RAPTOR_ITINERARY_SIZE = RAPTOR_MAX_LEGS * RAPTOR_LEG_SIZE + 4;\nconst RAPTOR_MAX_ITINERARIES = 8;\nconst RAPTOR_RESULTS_SIZE = RAPTOR_MAX_ITINERARIES * RAPTOR_ITINERARY_SIZE + 4;\n\nconst RAPTOR_MAX_STOPTIME_UPDATES = 5;\nconst RAPTOR_UPDATE_RESULT_SIZE = 2 + 2 + 2 + 2;\n\nconst RAPTOR_STOPTIME_UPDATE_SIZE = 4 + // diva\n    2 +  // linie\n    1 + // direction\n    1 + // weekday\n    4 + // date\n    1 + // apply\n    1 + // num_updates\n    2 + // padding\n    RAPTOR_MAX_STOPTIME_UPDATES * 4 + // time_real\n    RAPTOR_MAX_STOPTIME_UPDATES * RAPTOR_UPDATE_RESULT_SIZE + // results\n    RAPTOR_MAX_STOPTIME_UPDATES * 1; // matches\n\nexport class RoutingService {\n    private mappedRealtimeData: { [routeId: number]: Set<number> } = {};\n    constructor(private routingInstance: WebAssemblyInstance<RaptorExports>,\n        private routeInfoStore: RouteInfoStore) {\n\n    }\n\n    route(request: RouteRequest) {\n        if (request.departureStops.length != request.departureTimes.length) {\n            throw new Error(\"departureStops and departureTimes must have the same length\");\n        }\n        performance.mark(\"routing-start\");\n        let requestMemory = this.routingInstance.exports.get_request_memory();\n        let view = new DataView(this.routingInstance.exports.memory.buffer, requestMemory, 4 + 4 + (RAPTOR_MAX_REQUEST_STATIONS + RAPTOR_MAX_REQUEST_STATIONS) * 2 + RAPTOR_MAX_REQUEST_STATIONS * 4);\n        view.setUint8(0, 0);\n        view.setUint8(1, Math.min(RAPTOR_MAX_REQUEST_STATIONS, request.departureStops.length));\n        view.setUint8(2, 1);\n        let startOfDayVienna = getStartOfDayVienna(request.departureTimes[0]);\n        view.setUint8(3, startOfDayVienna.dayOfWeek);\n        for (let i = 0; i < Math.min(RAPTOR_MAX_REQUEST_STATIONS, request.departureStops.length); i++) {\n            view.setUint16(4 + i * 2, request.departureStops[i], true);\n        }\n        view.setUint16(4 + RAPTOR_MAX_REQUEST_STATIONS * 2, request.arrivalStop, true);\n        let departureDate = startOfDayVienna.unixTime / 1000;\n        for (let i = 0; i < Math.min(RAPTOR_MAX_REQUEST_STATIONS, request.departureStops.length); i++) {\n            let departureTime = (+request.departureTimes[i] - startOfDayVienna.unixTime) / 1000;\n            view.setUint32(4 + (RAPTOR_MAX_REQUEST_STATIONS + RAPTOR_MAX_REQUEST_STATIONS) * 2 + i * 4, departureTime, true);\n        }\n        view.setUint32(4 + (RAPTOR_MAX_REQUEST_STATIONS + RAPTOR_MAX_REQUEST_STATIONS) * 2 + RAPTOR_MAX_REQUEST_STATIONS * 4, departureDate, true);\n        let resOffset = this.routingInstance.exports.raptor();\n        performance.mark(\"routing-done\");\n        performance.measure(\"routing\", \"routing-start\", \"routing-done\");\n        console.log(`routing took ${(performance.getEntriesByName(\"routing\")[0]).duration}ms`);\n        performance.clearMarks();\n        performance.clearMeasures();\n        return this.readResults(this.routingInstance.exports.memory, resOffset, startOfDayVienna.unixTime);\n    }\n\n    async updateRealtimeForStops(divas: number[]) {\n        let params = new URLSearchParams();\n        for (let diva of divas) {\n            params.append(\"diva\", diva.toString());\n        }\n        let res = await fetch(`https://realtime-api.grapp.workers.dev/ogd_realtime/monitor?${params}`);\n        let monitorResponse: MonitorResponse = await res.json();\n        for (let monitor of monitorResponse.data.monitors) {\n            for (let line of monitor.lines) {\n                let direction: number;\n                if (line.richtungsId == \"1\") {\n                    direction = 0;\n                } else if (line.richtungsId == \"2\") {\n                    direction = 1;\n                } else {\n                    throw new Error(`unknown richtungsId in monitor ${line.richtungsId}`);\n                }\n                let timeReal = line.departures.departure\n                    .filter(d => null != d.departureTime.timeReal)\n                    .map(d => new Date(d.departureTime.timeReal));\n                if (timeReal.length > 0) {\n                    this.upsertRealtimeData({\n                        diva: parseInt(monitor.locationStop.properties.name),\n                        linie: line.lineId,\n                        apply: true,\n                        direction: direction,\n                        timeReal: timeReal\n                    });\n                }\n            }\n        }\n\n    }\n\n    private readLeg(buffer: ArrayBuffer, offset: number, departureDate: number): Leg {\n        let view = new DataView(buffer, offset, RAPTOR_LEG_SIZE);\n        let departureStopId = view.getUint16(4, true);\n        let arrivalStopId = view.getUint16(6, true);\n        let departureSeconds = view.getUint32(8, true);\n        let arrivalSeconds = view.getUint32(12, true);\n        let leg: Leg = {\n            type: view.getUint32(0, true),\n            departureStop: this.routeInfoStore.getStop(departureStopId),\n            arrivalStop: this.routeInfoStore.getStop(arrivalStopId),\n            plannedDeparture: new Date(departureSeconds * 1000),\n            delay: view.getInt16(18, true),\n            arrivalTime: new Date(arrivalSeconds * 1000),\n            duration: (arrivalSeconds - departureSeconds) * 1000,\n            route: null,\n            tripId: null,\n            isRealtime: false\n        };\n        if (leg.type == 1) {\n            let routeId = view.getUint16(16, true);\n            leg.route = this.routeInfoStore.getRoute(routeId);\n            leg.tripId = view.getUint32(20, true);\n            leg.isRealtime = this.mappedRealtimeData[leg.route.id]?.has(leg.tripId) || false;\n        }\n        return leg;\n    }\n\n    private readItinerary(buffer: ArrayBuffer, offset: number, departureDate: number): Itinerary {\n        let legs = [];\n        let view = new DataView(buffer, offset, RAPTOR_ITINERARY_SIZE);\n        let numLegs = view.getUint32(0, true);\n        for (let i = 0; i < numLegs; i++) {\n            legs.push(this.readLeg(buffer, offset + 4 + i * RAPTOR_LEG_SIZE, departureDate));\n        }\n        return { legs: legs.reverse() };\n    }\n\n    private readResults(memory: WebAssembly.Memory, offset: number, departureDate: number): Itinerary[] {\n        let itineraries = [];\n        let view = new DataView(memory.buffer, offset, RAPTOR_RESULTS_SIZE);\n        let numItineraries = view.getUint32(0, true);\n        for (let i = 0; i < numItineraries; i++) {\n            let itinerary = this.readItinerary(memory.buffer, offset + 4 + i * RAPTOR_ITINERARY_SIZE, departureDate);\n            itineraries.push(itinerary);\n        }\n        return itineraries;\n    }\n\n\n    private readStoptimeUpdate(buffer: ArrayBuffer, offset: number) {\n        let view = new DataView(buffer, offset, RAPTOR_STOPTIME_UPDATE_SIZE);\n        let routeId = view.getUint16(0, true);\n        let trip = view.getUint16(2, true);\n        let realtimeOffset = view.getInt16(4, true);\n        return {\n            routeId: routeId,\n            route: this.routeInfoStore.getRoute(routeId).name,\n            trip: trip,\n            realtimeOffset: realtimeOffset\n        };\n    }\n\n    getRealtimeUpdateResult() {\n        let memoryOffset = this.routingInstance.exports.get_stoptime_update_memory();\n        let dataView = new DataView(this.routingInstance.exports.memory.buffer, memoryOffset, RAPTOR_STOPTIME_UPDATE_SIZE);\n        let numUpdates = dataView.getUint8(13);\n        let updates = [];\n        for (let i = 0; i < numUpdates; i++) {\n            let update = this.readStoptimeUpdate(this.routingInstance.exports.memory.buffer, memoryOffset + 16 + (4 * RAPTOR_MAX_STOPTIME_UPDATES) + (i * RAPTOR_UPDATE_RESULT_SIZE));\n            updates.push({ ...update, numMatches: dataView.getUint8(16 + RAPTOR_MAX_STOPTIME_UPDATES * (RAPTOR_UPDATE_RESULT_SIZE + 4) + i) });\n        }\n        return updates;\n    }\n\n    upsertRealtimeData(updates: {\n        diva: number,\n        linie: number,\n        direction: number,\n        timeReal: Date[],\n        apply: boolean\n    }) {\n        let memoryOffset = this.routingInstance.exports.get_stoptime_update_memory();\n        let dataView = new DataView(this.routingInstance.exports.memory.buffer, memoryOffset, RAPTOR_STOPTIME_UPDATE_SIZE);\n        dataView.setUint32(0, updates.diva, true);\n        dataView.setUint16(4, updates.linie, true);\n        dataView.setUint8(6, updates.direction);\n        let date = getStartOfDayVienna(updates.timeReal[0]);\n        dataView.setUint8(7, date.dayOfWeek);\n        dataView.setUint32(8, date.unixTime / 1000, true);\n        dataView.setUint8(12, updates.apply ? 1 : 0);\n        let numUpdates = Math.min(updates.timeReal.length, RAPTOR_MAX_STOPTIME_UPDATES);\n        dataView.setUint8(13, numUpdates);\n        for (let i = 0; i < numUpdates; i++) {\n            dataView.setUint32(16 + i * 4, (+updates.timeReal[i] - date.unixTime) / 1000, true);\n        }\n        this.routingInstance.exports.process_realtime();\n        let res = this.getRealtimeUpdateResult();\n        for (let update of res) {\n            if (update.numMatches > 0) {\n                this.mappedRealtimeData[update.routeId] = this.mappedRealtimeData[update.routeId] || new Set();\n                this.mappedRealtimeData[update.routeId].add(update.trip);\n            }\n        }\n    }\n}","import { Itinerary } from \"./Itinerary\";\nimport { LegType } from \"./LegType\";\nimport { RouteInfoStore } from \"./RouteInfoStore\";\nimport { RouteUrlEncoder } from \"./RouteUrlEncoder\";\n\nexport class RouteDetailsService {\n    constructor(private routeUrlEncoder: RouteUrlEncoder,\n        private routeInfoStore: RouteInfoStore) {\n\n    }\n    getRouteByUrl(itineraryUrl: string): Itinerary {\n        let decoded = this.routeUrlEncoder.decode(itineraryUrl);\n        return {\n            legs: decoded.legs.map(l => ({\n                type: l.type,\n                departureStop: this.routeInfoStore.getStop(l.departureStopId),\n                arrivalStop: this.routeInfoStore.getStop(l.arrivalStopId),\n                route: l.type == LegType.Transit ? this.routeInfoStore.getRoute(l.routeId) : null,\n                tripId: l.tripId,\n                plannedDeparture: new Date(),\n                arrivalTime: new Date(),\n                delay: 0,\n                duration: 0,\n                isRealtime: false\n            }))\n\n        }\n    }\n}","import { StopSearchExports } from \"../../stopsearch/wasm-exports\";\nimport { ActionType } from \"./actions/ActionType\";\nimport { ArrivalStopTermChanged } from \"./actions/ArrivalStopTermChanged\";\nimport { DepartureStopTermChanged } from \"./actions/DepartureStopTermChanged\";\nimport { InitializeRouting } from \"./actions/InitializeRouting\";\nimport { InitializeStopSearch } from \"./actions/InitializeStopSearch\";\nimport { State } from \"./State\";\nimport { StopsSelected } from \"./actions/StopsSelected\";\nimport { copyToWasmMemory } from \"../utils/copyToWasmMemory\";\nimport { SetDepartureTime } from \"./actions/SetDepartureTime\";\nimport { RouteUrlEncoder } from \"../lib/RouteUrlEncoder\";\nimport { RoutingServicesFactory } from \"../lib/RoutingServicesFactory\";\nimport { RouteDetailsOpened } from \"./actions/RouteDetailsOpened\";\n\ntype Actions = InitializeStopSearch\n    | DepartureStopTermChanged\n    | ArrivalStopTermChanged\n    | InitializeRouting\n    | StopsSelected\n    | SetDepartureTime\n    | RouteDetailsOpened;\n\nlet stopSearchInstance: WebAssemblyInstance<StopSearchExports>;\nlet stopGroupIndex: { name: string; stopIds: number[] }[];\nlet _departureTime: Date = null;\nlet _departureStopGroup: number = null;\nlet _arrivalStopGroup: number = null;\n\nconst dataVersion = new URL(\"../../preprocessing-dist/raptor_data.bin.bmp\", import.meta.url).toString().split(\"/\").pop().replace(\".bmp\", \"\");\nconst routeUrlEncoder = new RouteUrlEncoder(dataVersion);\n\nconst routingServicesFactory = new RoutingServicesFactory();\n\nasync function initRouting() {\n    await routingServicesFactory.getRoutingService();\n}\n\nasync function initStopSearch() {\n    if (stopSearchInstance) {\n        return;\n    }\n    let stopGroupIndexTask = fetch(new URL(\"../../preprocessing-dist/stopgroup-index.json\", import.meta.url).toString()).then(res => res.json()).then(idx => stopGroupIndex = idx);\n    let [instantiatedSource, binaryResponse] = await Promise.all([<Promise<WebAssemblyInstantiatedSource<StopSearchExports>>>WebAssembly.instantiateStreaming(\n        fetch(new URL(\"../../stopsearch/stopsearch.wasm\", import.meta.url).toString())\n    ), fetch(new URL(\"../../preprocessing-dist/stop_search.bin.bmp\", import.meta.url).toString())]);\n    await Promise.all([stopGroupIndexTask, copyToWasmMemory(instantiatedSource.instance, binaryResponse, 4, (instance, sizes) => instance.exports.stopsearch_allocate(sizes[0] / 12, sizes[1], sizes[3] / 2))]);\n    instantiatedSource.instance.exports.stopsearch_reset();\n    stopSearchInstance = instantiatedSource.instance;\n}\n\nlet lastValue: string = \"\";\nlet state: State = {\n    arrivalStopResults: [],\n    departureStopResults: [],\n    results: [],\n    routeDetail: null\n};\n\nfunction updateState(updateFn: (oldState: State) => Partial<State>) {\n    let update = updateFn(state);\n    state = {\n        ...state,\n        ...update\n    };\n    self.postMessage([update, Object.keys(update)]);\n}\n\nfunction searchTermChanged(term: string, departure: boolean) {\n    if (null == stopSearchInstance) {\n        return;\n    }\n    let value = term.toLowerCase()\n        .replace(/ä/g, \"a\")\n        .replace(/ö/g, \"o\")\n        .replace(/ü/g, \"u\")\n        .replace(/ß/g, \"ss\")\n        .replace(/[^a-z0-9]/g, \" \")\n        .replace(/ +(?= )/g, '')\n        .trim()\n    if (value == lastValue) {\n        return;\n    }\n    let result;\n    if (value.length == lastValue.length + 1 && value.startsWith(lastValue)) {\n        result = stopSearchInstance.exports.stopsearch_step(value.charCodeAt(value.length - 1));\n    } else {\n        result = stopSearchInstance.exports.stopsearch_reset();\n        for (let i = 0; i < value.length; i++) {\n            result = stopSearchInstance.exports.stopsearch_step(value.charCodeAt(i));\n        }\n    }\n    lastValue = value;\n    let resultArrayView = new DataView(stopSearchInstance.exports.memory.buffer, result, 2 * 4);\n    let resultsCount = resultArrayView.getUint32(0, true);\n    let resultsOffset = resultArrayView.getUint32(4, true);\n    let resultsView = new DataView(stopSearchInstance.exports.memory.buffer, resultsOffset, resultsCount * 2);\n    let results: { id: number, name: string }[] = [];\n    for (let i = 0; i < resultsCount; i++) {\n        let stopGroupId = resultsView.getUint16(i * 2, true);\n        let stopGroup = stopGroupIndex[stopGroupId];\n        results.push({ id: stopGroupId, name: stopGroup.name });\n    }\n    updateState(s => ({\n        [departure ? \"departureStopResults\" : \"arrivalStopResults\"]: results\n    }));\n}\n\nasync function stopsSelected(d: number, a: number) {\n    _departureStopGroup = d;\n    _arrivalStopGroup = a;\n    _departureTime = new Date();\n    await route();\n}\n\nasync function departureTimeInc(inc: number) {\n    if (null == _departureTime) {\n        return;\n    }\n    _departureTime = new Date(_departureTime.getTime() + inc);\n    if (null != _departureStopGroup && null != _arrivalStopGroup) {\n        await route();\n    }\n}\n\nasync function route() {\n    let routingService = await routingServicesFactory.getRoutingService();\n    let routeInfoStore = await routingServicesFactory.getRouteInfoStore();\n    let departureStops = stopGroupIndex[_departureStopGroup].stopIds;\n    let arrivalStop = stopGroupIndex[_arrivalStopGroup].stopIds[0];\n\n    let lookedUpDivas = new Set<number>();\n    for (let i = 0; i < 10; i++) {\n        let results = routingService.route({\n            arrivalStop: arrivalStop,\n            departureStops: departureStops,\n            departureTimes: departureStops.map(() => _departureTime)\n        });\n        updateState(() => ({ results: results.map(i => ({ itineraryUrlEncoded: routeUrlEncoder.encode(i), itinerary: i })) }));\n        let divas = results.reduce((divas, itinerary) => [...divas, ...itinerary.legs.map(l => routeInfoStore.getDiva(l.departureStop.stopId))], [])\n            .filter(d => !lookedUpDivas.has(d));\n        if (divas.length == 0) {\n            break;\n        }\n        await routingService.updateRealtimeForStops(Array.from(new Set(divas).values()));\n        for (let diva of divas) {\n            lookedUpDivas.add(diva);\n        }\n    }\n}\n\nasync function routeDetailsOpened(itineraryIdUrlEncoded: string) {\n    let routeDetailsService = await routingServicesFactory.getRouteDetailsService();\n    let itinerary = routeDetailsService.getRouteByUrl(itineraryIdUrlEncoded);\n    updateState(() => ({ routeDetail: { itineraryUrlEncoded: itineraryIdUrlEncoded, itinerary: itinerary } }));\n}\n\n\nasync function handleMessage(msg: Actions) {\n    switch (msg.type) {\n        case ActionType.InitializeStopSearch:\n            await initStopSearch();\n            break;\n        case ActionType.DepartureStopTermChanged: {\n            searchTermChanged(msg.term, true);\n            break;\n        }\n        case ActionType.ArrivalStopTermChanged: {\n            searchTermChanged(msg.term, false);\n            break;\n        }\n        case ActionType.InitializeRouting: {\n            await initRouting();\n            break;\n        }\n        case ActionType.StopsSelected: {\n            await stopsSelected(msg.departure, msg.arrival);\n            break;\n        }\n        case ActionType.SetDepartureTime: {\n            await departureTimeInc(msg.increment);\n            break;\n        }\n        case ActionType.RouteDetailsOpened: {\n            await routeDetailsOpened(msg.itineraryUrlEncoded);\n            break;\n        }\n    }\n}\n\nself.addEventListener(\"message\", ev => {\n    let msg: Actions = ev.data;\n    handleMessage(msg).catch(err => console.error(err));\n});","import { RouteInfoStore } from \"./RouteInfoStore\";\nimport { RoutingService } from \"./RoutingService\";\nimport { populateTimeZones } from \"timezone-support/dist/lookup-convert\";\nimport { RaptorExports } from \"../../raptor/wasm-exports\";\nimport { copyToWasmMemory } from \"../utils/copyToWasmMemory\";\nimport { RouteDetailsService } from \"./RouteDetailsService\";\nimport { RouteUrlEncoder } from \"./RouteUrlEncoder\";\n\nexport class RoutingServicesFactory {\n    private routingServicePromise: Promise<RoutingService>;\n    private routeInfoStorePromise: Promise<RouteInfoStore>;\n    private timezonesPromise: Promise<void>;\n    private routingInstancePromise: Promise<WebAssemblyInstance<RaptorExports>>;\n    private routeDetailsServicePromise: Promise<RouteDetailsService>;\n    private readonly dataVersion = new URL(\"../../preprocessing-dist/raptor_data.bin.bmp\", import.meta.url).toString().split(\"/\").pop().replace(\".bmp\", \"\");\n\n    private populateTimeZones() {\n        if (this.timezonesPromise == null) {\n            this.timezonesPromise = import(\"timezone-support/dist/data-2012-2022\").then(d => populateTimeZones(d));\n        }\n        return this.timezonesPromise;\n    }\n\n    private async createRouteInfoStore() {\n        let routeNamesTask = fetch(new URL(\"../../preprocessing-dist/routes.json\", import.meta.url).toString()).then(res => (res.json()) as Promise<[string, string, number, string | null][]>);\n        let stopNamesTask = fetch(new URL(\"../../preprocessing-dist/stops.json\", import.meta.url).toString()).then(res => res.json() as Promise<[string, number][]>);\n        let [routeNames, stopNames] = await Promise.all([routeNamesTask, stopNamesTask]);\n        return new RouteInfoStore(routeNames, stopNames);\n    }\n\n    private async createRoutingInstance() {\n        let [instantiatedSource, binaryResponse] = await Promise.all([<Promise<WebAssemblyInstantiatedSource<RaptorExports>>>WebAssembly.instantiateStreaming(\n            fetch(new URL(\"../../raptor/raptor.wasm\", import.meta.url).toString())\n        ), fetch(new URL(\"../../preprocessing-dist/raptor_data.bin.bmp\", import.meta.url).toString())]);\n        await copyToWasmMemory(instantiatedSource.instance, binaryResponse, 11,\n            (instance, sizes) => instance.exports.raptor_allocate(sizes[0], sizes[1], sizes[2], sizes[3], sizes[4], sizes[5], sizes[6], sizes[7], sizes[8], sizes[9], sizes[10]));\n        instantiatedSource.instance.exports.initialize();\n        return instantiatedSource.instance;\n    }\n\n    private async getRoutingInstance() {\n        if (this.routingInstancePromise == null) {\n            this.routingInstancePromise = this.createRoutingInstance();\n        }\n        return this.routingInstancePromise;\n    }\n\n    async getRouteInfoStore() {\n        if (this.routeInfoStorePromise == null) {\n            this.routeInfoStorePromise = this.createRouteInfoStore();\n        }\n        return this.routeInfoStorePromise;\n    }\n\n    private async createRoutingService() {\n        let [routingInstance, routeInfoStore] = await Promise.all([this.getRoutingInstance(), this.getRouteInfoStore(), this.populateTimeZones()])\n        return new RoutingService(routingInstance, routeInfoStore);\n    }\n\n    async getRoutingService() {\n        if (this.routingServicePromise == null) {\n            this.routingServicePromise = this.createRoutingService();\n        }\n        return this.routingServicePromise;\n    }\n\n    private async createRouteDetailsService() {\n        let routeInfoStore = await this.getRouteInfoStore();\n        return new RouteDetailsService(new RouteUrlEncoder(this.dataVersion), routeInfoStore);\n    }\n\n    async getRouteDetailsService() {\n        if (this.routeDetailsServicePromise == null) {\n            this.routeDetailsServicePromise = this.createRouteDetailsService();\n        }\n        return this.routeDetailsServicePromise;\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [453,541], function() { return __webpack_require__(3976); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + {\"453\":\"7d8349f08ca61580a53a\",\"541\":\"b99ef812d635b1ec6d04\",\"955\":\"aca8258eee8d7b804046\"}[chunkId] + \".bundle.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t976: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkpockmas\"] = self[\"webpackChunkpockmas\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","next","async","copyToWasmMemory","instance","res","numSizes","getOffset","offset","reader","body","getReader","done","sizes","sizesBuffer","Uint8Array","received","read","data","value","length","set","slice","Math","min","byteLength","view","DataView","buffer","i","push","getUint32","undefined","exports","memory","DataVersionMismatchError","Error","constructor","expected","actual","super","RouteUrlEncoder","dataVersion","UrlVersion","encode","r","binary","legs","filter","v","type","setUint8","setUint32","plannedDeparture","getTime","l","setUint16","departureStop","stopId","arrivalStop","route","id","tripId","this","decode","url","version","parseInt","substr","decodeV1","split","numLegs","getUint8","departureTime","Date","departureStopId","getUint16","arrivalStopId","routeId","RouteInfoStore","routeNames","stops","getDiva","getStop","stopName","getRoute","name","color","headsign","dayOfWeekToMask","dayOfWeek","mask","getStartOfDayVienna","date","vienna","viennaTime","unixTime","year","month","day","hours","minutes","seconds","RoutingService","routingInstance","routeInfoStore","mappedRealtimeData","request","departureStops","departureTimes","performance","mark","requestMemory","get_request_memory","startOfDayVienna","departureDate","resOffset","raptor","measure","console","log","getEntriesByName","duration","clearMarks","clearMeasures","readResults","divas","params","URLSearchParams","diva","append","toString","fetch","monitorResponse","json","monitor","monitors","line","lines","direction","richtungsId","timeReal","departures","departure","d","map","upsertRealtimeData","locationStop","properties","linie","lineId","apply","readLeg","departureSeconds","arrivalSeconds","leg","delay","getInt16","arrivalTime","isRealtime","has","readItinerary","RAPTOR_MAX_LEGS","reverse","itineraries","numItineraries","RAPTOR_MAX_ITINERARIES","itinerary","readStoptimeUpdate","trip","realtimeOffset","getRealtimeUpdateResult","memoryOffset","get_stoptime_update_memory","dataView","numUpdates","updates","update","numMatches","process_realtime","Set","add","RouteDetailsService","routeUrlEncoder","getRouteByUrl","itineraryUrl","stopSearchInstance","stopGroupIndex","_departureTime","_departureStopGroup","_arrivalStopGroup","URL","pop","replace","routingServicesFactory","populateTimeZones","timezonesPromise","then","routeNamesTask","stopNamesTask","stopNames","Promise","all","instantiatedSource","binaryResponse","WebAssembly","instantiateStreaming","raptor_allocate","initialize","routingInstancePromise","createRoutingInstance","routeInfoStorePromise","createRouteInfoStore","getRoutingInstance","getRouteInfoStore","routingServicePromise","createRoutingService","routeDetailsServicePromise","createRouteDetailsService","lastValue","state","arrivalStopResults","departureStopResults","results","routeDetail","updateState","updateFn","self","postMessage","Object","keys","searchTermChanged","term","result","toLowerCase","trim","startsWith","stopsearch_step","charCodeAt","stopsearch_reset","resultArrayView","resultsCount","resultsOffset","resultsView","stopGroupId","stopGroup","s","routingService","getRoutingService","stopIds","lookedUpDivas","itineraryUrlEncoded","reduce","updateRealtimeForStops","Array","from","values","addEventListener","ev","msg","stopGroupIndexTask","idx","stopsearch_allocate","initStopSearch","initRouting","a","stopsSelected","arrival","inc","departureTimeInc","increment","itineraryIdUrlEncoded","getRouteDetailsService","routeDetailsOpened","handleMessage","catch","err","error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","m","x","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","getPrototypeOf","obj","__proto__","t","mode","__esModule","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","f","e","chunkId","promises","u","miniCssF","g","globalThis","Function","window","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","b","location","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime"],"sourceRoot":""}